
@{
    ViewBag.Title = "ProductDetails";
    var ID = Request.QueryString["StorageID"];
    Layout = "~/Areas/PartsLocal/Views/Shared/_PartlocalLayout.cshtml";
}

<h2>Product Information</h2>

<input type="hidden" id="RecordID" value="@ID" />


<div class="MainDetails">
    <div class="ProductDetails">
        <div class="ProductDetails__content">
            <div class="ProductDetails__Text">
                <span>Part number :</span>
                <p id="partText">--NA--</p>
            </div>
            @*<i class='bx bx-arrow-back'></i>*@
            <img draggable="false" style="transform: scale(0.8)" src="~/Content/Images/hashtag (1).png" />
        </div>

        <div class="ProductDetails__content">
            <div class="ProductDetails__Text">
                <span>Model name :</span>
                <p id="Model">--NA--</p>
            </div>
            @*<i class='bx bx-arrow-back'></i>*@
            <img draggable="false" style="transform: scale(0.8)" src="~/Content/Images/hashtag (1).png" />
        </div>
        <div class="ProductDetails__content">
            <div class="ProductDetails__Text">
                <span>Location :</span>
                <p id="localText">--NA--</p>
            </div>
            @*<i class='bx bx-arrow-back'></i>*@
            <img draggable="false" style="transform: scale(0.8)" src="~/Content/Images/hashtag (1).png" />
        </div>

        <div class="ProductDetails__content">
            <div class="ProductDetails__Text">
                <span>Quantity :</span>
                <p id="Quantity">--NA--</p>
            </div>
            @*<i class='bx bx-arrow-back'></i>*@
            <img draggable="false" g src="~/Content/Images/boxes.png" />

        </div>
    </div>
</div>




@*=================================================================================*@
@*=========================== SHOP ORDER IN =====================================*@
@*=================================================================================*@
<div class="modal fade modal-l" id="ShowShopOrderIN" tabindex="-1" role="dialog" data-bs-backdrop="static">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">

            <div class="modal-body modalwrap">
                <div class="custom_modal_header">
                    <h5>Shop Order monitoring Details (IN)</h5>

                    <button type="button" class="btn btn-light  close" data-bs-dismiss="modal">
                        <span>&times;</span>
                    </button>
                </div>


                <div class="stepper" id="validationStepper">
                    <ol class="stepper-steps">
                        <li class="stepper-step active" data-step="1">
                            <div class="stepper-step-indicator">1</div>
                            <div class="stepper-step-label">Enter Quantity</div>
                        </li>
                        <li class="stepper-step" data-step="2">
                            <div class="stepper-step-indicator">2</div>
                            <div class="stepper-step-label">Shop Order(IN)</div>
                        </li>
                    </ol>




                    <div class="stepper-content">
                        <!-- Step 1: Account Information -->
                        <div class="stepper-pane active" id="validation-step-1">
                            <input type="text" class="form-control" id="QuantityIN" name="QuantityIN" required>
                        </div>

                        <!-- Step 2: Profile Information -->
                        <div class="stepper-pane" id="validation-step-2">
                            <form class="row g-3 mb-4" id="ShopOrderInForm">                          
                                <div class="col-md-6">
                                    <label for="validationLastName" class="form-label">Input by :</label>
                                    <input type="text" class="form-control" name="Remarks_IN" id="validationLastName" required>
                               
                                </div>
                                <div class="col-12">
                                    <label for="validationPhone" class="form-label">Rotor Shop Order : </label>
                                    <input type="text" class="form-control" name="RotorShop_IN" id="RotorShop_IN" required>
                                
                                </div>
                            </form>
                        </div>
                    </div>

                    <div class="stepper-actions">
                        <div class="step-indicators">
                            <div class="step-indicator active" data-step="1"></div>
                            <div class="step-indicator" data-step="2"></div>
                        </div>
                        <div>
                            <button class="btn btn-secondary" id="prevBtn" disabled>Previous</button>
                            <button class="btn btn-primary" id="nextBtn">Next</button>
                        </div>
                    </div>
                </div>




               
            </div>

        </div>
    </div>
</div>

@*=================================================================================*@
@*=========================== SHOP ODER OUT =====================================*@
@*=================================================================================*@
<div class="modal fade modal-lg"  id="ShowShopOrderOut" tabindex="-1" role="dialog" data-bs-backdrop="static">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">

            <div class="modal-body modalwrap">
                <div class="custom_modal_header">
                    <h5>Edit asdsadasdasd</h5>

                    <button type="button" class="btn btn-light  close" data-bs-dismiss="modal">
                        <span>&times;</span>
                    </button>
                </div>


                <form id="DieToolForms" class="addformcontainer" autocomplete="off">
                    <div class="row">
                        <div class="form_group col-12 col-lg-6 col-sm-12">
                            <label for="">Product Type</label>
                            <input type="text" name="ToolNo" id="ToolNo" placeholder="Enter Product Type" required>
                        </div>

                        <div class="form_group col-12 col-lg-6 col-sm-12">
                            <label for="">No# Stamp</label>
                            <input type="text" name="Stamp" id="Stamp" placeholder="Enter Number Stamp" onkeypress='return restrictChars(event)' required>
                        </div>
                    </div>

                    <div class="row">

                        <div class="form_group col-12 col-lg-6 col-sm-12">
                            <label for="">Machine</label>
                            <input type="text" name="Machine" id="Machine" placeholder="Enter Details of Modification" onkeypress='return restrictChars(event)' required>
                        </div>
                        <div class="form_group col-12 col-lg-6 col-sm-12">
                            <label for="">Die Condition</label>
                            <input type="text" name="DieCondition" id="DieCondition" placeholder="Enter Shot Cycle Shot" required>
                        </div>
                    </div>

                    <div class="row">
                        <div class="form_group col-12 col-lg-6 col-sm-12">
                            <label for="">Operator</label>
                            <input type="text" name="Operator" id="Operator" placeholder="Enter Name of Operator" required>
                        </div>
                        <div class="form_group col-12 col-lg-6 col-sm-12">
                            <label for="">Die Height</label>
                            <input type="text" name="DieHeight" id="DieHeight" placeholder="Enter Die Height" required>
                        </div>
                    </div>

                    <div class="row">
                        <div class="form_group col-12 col-lg-6 col-sm-12">
                            <label for="">Leader Confirmation</label>
                            <input type="text" name="LeaderCom" id="LeaderCom" placeholder="Enter In Charget name" required>
                        </div>
                        <div class="form_group col-12 col-lg-6 col-sm-12">
                            <label for="">Gear(ALPHA)</label>
                            <input type="text" name="Gear" id="Gear" required>
                        </div>
                    </div>

                    <div class="row">
                        <div class="form_group col-12 col-lg-6 col-sm-12">
                            <label for="">Pitch(MXM)</label>
                            <input type="text" name="Pitch" id="Pitch" placeholder="Enter In Charget name" required>
                        </div>
                    </div>


                    <div class="flex_end" id="editsdisplay">
                        <button type="submit" class="primary_button_color">
                            <span><i class="fa-regular fa-floppy-disk"></i>  Save</span>
                        </button>
                    </div>
                </form>
            </div>

        </div>
    </div>
</div>



<div class="PartslistAction">
    <div class="ImagepartsContainer">
        <img src="~/Content/Images/background.png" />
        <img src="~/Content/Images/background.png" />
    </div>



    <div class="MainVerifyContainer">
        <label>Required Part number: </label><br />
        <input type="text" class="form-control" id="RequireInput" placeholder="Enter the Required Partnumber" />
        <br />
        <label>Verify status : </label><br />
        <div class="VerifyContainer">
            <span id="VerifyStats"></span>
        </div>
        <label>Select a Transaction  : </label>
        <hr />
        <div class="flex_align TransactionWrap">
            <button id="OpenOutbtn" disabled>Out (Issued)</button>
            <button id="OpenInbtn" disabled>IN  (Receive)</button>
        </div>
    </div>


</div>



<script>
    const ID = $("#RecordID").val();
    let referpartnum;

    // Stepper elements
    const stepperSteps = document.querySelectorAll('.stepper-step');
    const stepperPanes = document.querySelectorAll('.stepper-pane');
    const stepIndicators = document.querySelectorAll('.step-indicator');
    const prevBtn = document.getElementById('prevBtn');
    const nextBtn = document.getElementById('nextBtn');

    // Current step
    let currentStep = 1;
    const totalSteps = 2;

    // Form elements
    const shopForms = document.getElementById('ShopOrderInForm');


     const partlocationStorageList = async () => {
         let res = await FetchAuthenticate('@Url.Action("GetProductDetails", "PartsLocator")', { RecordID : ID});
         if (res && res.Success) {
             referpartnum = res.Data.Partnumber

             $("#partText").text(referpartnum);
             $("#Model").text(res.Data.ModelName);
             $("#localText").text(res.Data.Area);
             $("#Quantity").text(res.Data.Quantity);
         }
    };

    $("#RequireInput").on('keyup', function (e) {
        if (event.key === 'Enter') {
            const val = e.target.value;

            if (val === referpartnum) {
                $("#VerifyStats").text("GOOD");
                $("#OpenOutbtn").prop("disabled", false);
                $("#OpenInbtn").prop("disabled", false);
            } else {
                $("#VerifyStats").text("NOT GOOD");
                $("#OpenOutbtn").prop("disabled", true);
                $("#OpenInbtn").prop("disabled", true);
            }
        }


    });

    $("#OpenOutbtn").on('click', function (e) {
        e.preventDefault();
        $("#ShowShopOrderOut").modal("show");
    });


    $("#OpenInbtn").on('click', function (e) {
        e.preventDefault();
        $("#ShowShopOrderIN").modal("show");
    }); 


    // ============================== STEPPER ================================== //
    // Reset stepper to initial state
    function updateStepper() {
        // Update step indicators
        stepperSteps.forEach((step, index) => {
            const stepNumber = index + 1;

            if (stepNumber < currentStep) {
                step.classList.remove('active');
                step.classList.add('completed');
            } else if (stepNumber === currentStep) {
                step.classList.add('active');
                step.classList.remove('completed');
            } else {
                step.classList.remove('active', 'completed');
            }
        });

        // Update step panes
        stepperPanes.forEach((pane, index) => {
            const paneNumber = index + 1;

            if (paneNumber === currentStep) {
                pane.classList.add('active');
            } else {
                pane.classList.remove('active');
            }
        });

        // Update step indicators
        stepIndicators.forEach((indicator, index) => {
            const indicatorNumber = index + 1;

            if (indicatorNumber === currentStep) {
                indicator.classList.add('active');
            } else {
                indicator.classList.remove('active');
            }
        });

        // Update buttons
        prevBtn.disabled = currentStep === 1;

        if (currentStep === totalSteps) {
            nextBtn.textContent = 'Finish';
            nextBtn.classList.remove('btn-primary');
            nextBtn.classList.add('btn-success');
        } else {
            nextBtn.textContent = 'Next';
            nextBtn.classList.remove('btn-success');
            nextBtn.classList.add('btn-primary');
        }
    }

    // Update stepper UI based on current step
    function updateStepper() {
        // Update step indicators
        stepperSteps.forEach((step, index) => {
            const stepNumber = index + 1;

            if (stepNumber < currentStep) {
                step.classList.remove('active');
                step.classList.add('completed');
            } else if (stepNumber === currentStep) {
                step.classList.add('active');
                step.classList.remove('completed');
            } else {
                step.classList.remove('active', 'completed');
            }
        });

        // Update step panes
        stepperPanes.forEach((pane, index) => {
            const paneNumber = index + 1;

            if (paneNumber === currentStep) {
                pane.classList.add('active');
            } else {
                pane.classList.remove('active');
            }
        });

        // Update step indicators
        stepIndicators.forEach((indicator, index) => {
            const indicatorNumber = index + 1;

            if (indicatorNumber === currentStep) {
                indicator.classList.add('active');
            } else {
                indicator.classList.remove('active');
            }
        });

        // Update buttons
        prevBtn.disabled = currentStep === 1;

        if (currentStep === totalSteps) {
            nextBtn.textContent = 'Finish';
            nextBtn.classList.remove('btn-primary');
            nextBtn.classList.add('btn-success');
        } else {
            nextBtn.textContent = 'Next';
            nextBtn.classList.remove('btn-success');
            nextBtn.classList.add('btn-primary');
        }
    }

    // Next button click
    nextBtn.addEventListener('click', function () {
        let checkQuan = document.getElementById("QuantityIN").value;

        if (checkQuan !== "") {
            if (currentStep < totalSteps) {
                currentStep++;
                updateStepper();
            } else {
                // Finish button clicked
                let formData = new FormData(shopForms);
                formData.append("TransactionType", 0);
                formData.append("Quantity", parseInt(checkQuan));
                formData.append("TransactionType", 0);
                formData.append("Partnumber", referpartnum);

                const data = Object.fromEntries(formData);
                console.log(data);
                alert('Registration completed successfully!');
                //closeModal();
            }
        }
    });

    // Previous button click
    prevBtn.addEventListener('click', function () {
        if (currentStep > 1) {
            currentStep--;
            updateStepper();
        }
    });

    partlocationStorageList();
</script>