
@{
    ViewBag.Title = "TrackParts";
    Layout = "~/Areas/PartsLocal/Views/Shared/_PartlocalLayout.cshtml";
}


<header>
    <h3>Parts Locator Inventory</h3>
</header>


<div class="search-section">
    <div class="search-container">
        <input type="text" id="searchInput" placeholder="Enter part number to search (e.g., 002886060-01)">
        <button id="searchButton">Search Parts</button>
        <button id="clearSearch">Clear Search</button>
    </div>
</div>


<div class="grid-container" id="partsGrid">
    <!-- Grid cells will be generated by JavaScript -->
</div>

<div id="resultsInfo" class="results-info" style="display: none;">
    <!-- Search results info will appear here -->
</div>


<div class="results-section" id="resultsSection" style="display: none;">
    <h3 id="resultsTitle">Search Results</h3>
    <table class="results-table" id="resultsTable">
        <thead>
            <tr>
                <th>Area</th>
                <th>Record ID</th>
                <th>Part Number</th>
            </tr>
        </thead>
        <tbody id="resultsBody">
            <!-- Results will be populated here -->
        </tbody>
    </table>
</div>

<div class="instructions">
    <h3>How to Use This System</h3>
    <p>1. <strong>Search Parts:</strong> Enter a part number in the search box and click "Search Parts" to highlight matching locations</p>
    <p>2. <strong>Select Location:</strong> Click on any location to select it and view its details</p>
    <p>3. <strong>Clear Search:</strong> Click "Clear Search" to remove all highlights from the grid</p>
</div>


@*=================================================================================*@
@*=========================== EDIT MASTERLIST PARTS ===============================*@
@*=================================================================================*@
<div class="modal fade modal-xl" id="OpenStorageModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-body modalwrap">
                <div class="custom_modal_header">
                    <h5>Palete <span id="letterdisplay"></span></h5>

                    <button type="button" class="btn btn-light  close" data-bs-dismiss="modal">
                        <span>&times;</span>
                    </button>
                </div>

                <table width="100%" cellpadding="5" cellspacing="0" border="1" style="border-collapse:collapse; font-size:14px;">
                    <tr style="background-color:#f5f5f5; color:#333333; font-weight: 600 !important; text-align:left;">
                        <th align="left">PartNo</th>
                        <th align="left">PartName</th>
                        <th align="left">Quantity</th>
                        <th align="left">Front Image</th>
                        <th align="left">Back Image</th>
                    </tr>
                    <tbody id="StorageBody">
                    </tbody>
                </table>

            </div>


        </div>
    </div>
</div>



<script>
    const gridContainer = document.getElementById('partsGrid');
    const searchInput = document.getElementById('searchInput');
    const searchButton = document.getElementById('searchButton');
    const clearSearchButton = document.getElementById('clearSearch');
    const resultsInfo = document.getElementById('resultsInfo');
    const resultsSection = document.getElementById('resultsSection');
    const resultsBody = document.getElementById('resultsBody');
    const resultsTitle = document.getElementById('resultsTitle');

    let storageList = [];

    //const storageList = [
    //    { partnumber: "002886060-01", area: "E", recordId: 101 },
    //    { partnumber: "123450000-A", area: "B", recordId: 102 },
    //    { partnumber: "998877665-X", area: "M", recordId: 103 },
    //    { partnumber: "556677889-Y", area: "E", recordId: 104 },
    //    { partnumber: "002886060-01", area: "A", recordId: 202 },
    //    { partnumber: "002886060-01", area: "H", recordId: 303 },
    //];


    const partlocationStorageList = async () => {
        let res = await FetchAuthenticate('@Url.Action("GetStorageData", "PartsLocator")', {});
        if (res && res.Success) {
            //let matchData = res.Data.filter(res => res.Partnumber === "01013699-01");
            //console.log(matchData);
            //storageList = res.Data;
            storageList = res.Data.map(item => ({
                ...item,
                Area: customAreaMapping(item.Area)
            }));

        }
    };

    const customAreaMapping = (areaNumber) => {
        const mapping = {
            1: 'A', 2: 'B', 3: 'C', 4: 'D', 5: 'E',
            6: 'F', 7: 'G', 8: 'H', 9: 'I', 10: 'J',
            11: 'K', 12: 'L', 13: 'M', 14: 'N', 15: 'O',
            16: 'P', 17: 'Q', 18: 'R', 19: 'S', 20: 'T',
            6: 'U'
        };
        return mapping[areaNumber] || areaNumber;
    };

    // Create grid cells A-U
    const labels = "ABCDEFGHIJKLMNOPQRSTU".split("");

    // Create grid cells
    labels.forEach(letter => {
        // Create grid cell
        const cell = document.createElement('div');
        cell.className = 'grid-cell';
        cell.id = `cell-${letter}`;
        cell.setAttribute('data-area', letter);

        const labelElement = document.createElement('div');
        labelElement.className = 'cell-label';
        labelElement.textContent = letter;

        // Find part numbers for this area
        const areaItems = storageList.filter(item => item.Area === letter);
        const partNumbers = [...new Set(areaItems.map(item => item.Partnumber))];

        const partNumberElement = document.createElement('div');
        partNumberElement.className = 'part-number';
        partNumberElement.id = `part-${letter}`;
        partNumberElement.textContent = partNumbers.length > 0 ? partNumbers.join(', ') : '-';

        cell.appendChild(labelElement);
        cell.appendChild(partNumberElement);
        gridContainer.appendChild(cell);

        // Add click event to grid cell
        cell.addEventListener('click', function () {
            const selectedRecordId = getRecordIdByArea(letter);
            if (selectedRecordId !== null) {
                console.log("✅ Selected RecordID:", selectedRecordId);

                // Show alert with selected record ID

                // Example: send to backend or details page
                window.location.href = "/PartsLocal/PartsLocator/ProductDetails?StorageID=" + selectedRecordId;
            } else {
                $("#letterdisplay").text(letter);
                var letterStorage = storageList.filter(res => res.Area === letter);

                const container = $("#StorageBody");
                container.empty();

                letterStorage.forEach(res => {
                    container.append(
                        `<tr class='Editbtnbutton' id='editButton_${res.RecordID}' >
                            <td>${res.Partnumber}</td>
                            <td>${res.ModelName}</td>
                            <td>${res.Quantity}</td>
                            <td>${res.FrontImage}</td>
                            <td>${res.BackImage}</td>
                        </tr>`
                    );
                });

                $("#OpenStorageModal").modal("show");
            }

            // Highlight only the selected box
            highlightBoxOnly(letter);
        });
    });

    // === Show Details ===
    $(document).on("click", ".Editbtnbutton", function (e) {
        e.stopPropagation();
        var rowId = $(this).attr("id");
        var rowIndex = rowId.split("_")[1];
        window.location.href = "/PartsLocal/PartsLocator/ProductDetails?StorageID=" + rowIndex;
    });



    // Highlight ALL areas found
    function highlightMatchingAreas(matchAreas) {
        document.querySelectorAll(".grid-cell").forEach(cell => {
            const area = cell.getAttribute("data-area");
            cell.classList.toggle("highlighted", matchAreas.includes(area));
        });
    }

    // Highlight ONLY selected letter
    function highlightBoxOnly(selectedArea) {
        document.querySelectorAll(".grid-cell").forEach(cell => {
            const isActive = cell.getAttribute("data-area") === selectedArea;
            cell.classList.toggle("active", isActive);

            // Remove highlighted class when selecting a box
            if (isActive) {
                cell.classList.remove("highlighted");
            }
        });
    }

    // Search functionality
    searchButton.addEventListener('click', function () {
        const searchValue = searchInput.value.trim().toUpperCase();
        resultsInfo.style.display = "none";
        resultsSection.style.display = "none";

        // Clear previous highlights
        clearHighlights();

        if (!searchValue) {
            alert('Please enter a search term.');
            return;
        }

        const matchedItems = storageList.filter(item =>
            item.Partnumber.toUpperCase().includes(searchValue)
        );


        if (matchedItems.length > 0) {
            const matchedAreas = [...new Set(matchedItems.map(item => item.Area))];
            highlightMatchingAreas(matchedAreas);

            // Show results info
            resultsInfo.textContent = `Found ${matchedItems.length} match(es) for "${searchValue}"`;
            resultsInfo.style.display = 'block';

            // Show results table
            resultsTitle.textContent = `Matches for Partnumber: ${searchValue}`;
            resultsBody.innerHTML = '';

            matchedItems.forEach(item => {
                const row = document.createElement('tr');
                row.innerHTML = `
                            <td>${item.Area}</td>
                            <td>${item.RecordID}</td>
                            <td>${item.Partnumber}</td>
                        `;
                resultsBody.appendChild(row);
            });

            resultsSection.style.display = 'block';
        } else {
            alert("Partnumber not found!");
        }
    });

    // Clear search functionality
    clearSearchButton.addEventListener('click', function () {
        searchInput.value = '';
        clearHighlights();
        resultsInfo.style.display = 'none';
        resultsSection.style.display = 'none';
    });

    // Function to clear all highlights
    function clearHighlights() {
        document.querySelectorAll(".grid-cell").forEach(cell => {
            cell.classList.remove("highlighted");
            cell.classList.remove("active");
        });
    }

    // Allow pressing Enter in search input
    searchInput.addEventListener('keyup', function (event) {
        if (event.key === 'Enter') {
            searchButton.click();
        }
    });

    // ✅ Get only the FIRST RecordID of the selected letter
    function getRecordIdByArea(area) {
        const searchValue = document.getElementById('searchInput').value.trim().toUpperCase();
        const areaItems = storageList.filter(item =>
            item.Area === area && item.Partnumber.toUpperCase() === searchValue
        );
        return areaItems.length > 0 ? areaItems[0].RecordID : null;
    }


    partlocationStorageList();
</script>