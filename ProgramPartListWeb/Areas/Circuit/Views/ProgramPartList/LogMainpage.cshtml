
@{
    ViewBag.Title = "ProgramPartlist";
    Layout = "";
}

<head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/x-icon" href="@Url.Content("~/Content/Images/ready-stock.ico")">
    <link rel="preload" href="@Url.Content("~/Content/fonts/Poppins-Regular.ttf")" as="font" type="font/ttf" crossorigin="anonymous">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>@ViewBag.Title</title>
    <link rel="preload" href="~/Content/fonts/Poppins-Regular.ttf" as="font" type="font/ttf" crossorigin="anonymous">

    <script src="~/Scripts/bootstrap.min.js"></script>
    <script src="~/Scripts/Popper.min.js"></script>

    @Styles.Render("~/Content/shared-css")
    @Styles.Render("~/Content/partlist-css")

    @Scripts.Render("~/bundles/shared-js")
    @Scripts.Render("~/bundles/modernizr")
</head>


 <div class="loginwrapper">
    <div class="logincontainer activeforms">
        <form id="logincredentials">
            <h3 style="margin-bottom: 1.5em;">Program Parts List Components Preparation System</h3>
            <div class="group">
                <label>Username : </label>
                <input type="text" name="username" id="username" placeholder="Enter Username" required />
            </div>
            <div class="group">
                <label>Password : </label>
                <input type="password" name="password" id="password" placeholder="Enter Password" required />
            </div>

            <button type="submit" id="loginbtn"><i class="fa-solid fa-right-to-bracket"></i> Login</button>
        </form>
        <p class="selectreg">Dont have an account? <span  id="changereg">Click here...</span></p>
    </div>
    <div class="Registrationcontainer">
        <form id="Registerform" autocomplete="off">
            <h2 style="text-align: left; margin-bottom: 1em;">Register Users</h2>
            <div class="group">
                <label>Username: </label>
                <input type="text" name="usertext" id="usertext" placeholder="Username"  required/>
            </div>
            <div class="group">
                <label>Password: </label>
                <input type="password" name="passtext" id="passtext" placeholder="Password" required />
            </div>

            <div class="group">
                <label>First name: </label>
                <input type="text" name="fname" id="fname" placeholder="Enter Firstname" required />
            </div>

            <div class="group">
                <label>Last name: </label>
                <input type="text" name="lname" id="lname" placeholder="Enter lastname" required />
            </div>

            <button type="submit" id="Regisbtn"><i class="fa-solid fa-user-plus"></i> Registered</button>
        </form>

        <p class="selectreg">Already have an account? <span id="changelogin">Click here...</span></p>
    </div>

     
 </div>

    <script type="text/javascript">
             const logform = document.getElementById('logincredentials');
             const regform = document.getElementById('Registerform');
             const changeforms = document.getElementById('changereg');
             const changelogs = document.getElementById('changelogin');


             changeforms.addEventListener('click', function (e) {
                 e.preventDefault();

                 document.querySelector('.logincontainer').classList.remove('activeforms');
                 document.querySelector('.Registrationcontainer').classList.add('activeforms');
             });

             changelogs.addEventListener('click', function (e) {
                 e.preventDefault();

                 document.querySelector('.Registrationcontainer').classList.remove('activeforms');
                 document.querySelector('.logincontainer').classList.add('activeforms');
             });

             logform.addEventListener('submit', async (e) => {
                 e.preventDefault();
                 console.clear();
                 const savebtn = document.querySelector("#loginbtn");
                 savebtn.innerHTML = " <div class='buttonloading'></div>";

                 let formData = new FormData(e.target);
                 formData.append('proj', 8);

                 let res = await postData('/Auth/Authenticate', formData);
                 setTimeout(() => {
                     if (res.StatusCode === 200) {
                         Swal.fire({
                             title: "Success",
                             text: res.Message,
                             icon: "success",
                             showConfirmButton: false,
                             timer: 1500
                         }).then(() => {
                             savebtn.innerHTML = "<span style='color: #fff;'><i class='fa-solid fa-right-to-bracket'></i>  Login</span>"
                             localStorage.setItem('Logout', "/Circuit/ProgramPartList/LogMainpage");

                             // For Info of the user
                             localStorage.setItem('UserRole', res.Data.role);
                             localStorage.setItem('Fullname', res.Data.fullname);

                             // For Authorize User Access
                             localStorage.setItem('accessToken', res.Data.access_token);
                             localStorage.setItem('refreshToken', res.Data.refresh_token);

                             // For Persitent Login
                             localStorage.setItem('PartlistTime', new Date().toISOString());
                             localStorage.setItem('isLoggedInProgram', 'true');


                             window.location.href = "/Circuit/ProgramPartList/PlanSchedule";
                         });
                     } else {
                         Swal.fire({
                             title: "Login Failed",
                             icon: "error",
                             text: res.Message,
                             timer: 1500,
                             showConfirmButton: false
                         });

                         savebtn.innerHTML = "<span style='color: #fff;'><i class='fa-solid fa-right-to-bracket'></i>  Login</span>"
                     };
                 }, 500);

             });
             regform.addEventListener('submit', async (e) => {
                 e.preventDefault();
                     const savebtn = document.querySelector("#Regisbtn");
                     savebtn.innerHTML = " <div class='buttonloading'></div>";

                     let formData = new FormData(e.target);
                     let res = await postData('/User/CreateUser', formData);
                    console.log(res);
                     //if (res.StatusCode === 200) {
                     //    Swal.fire({
                     //        title: "Success",
                     //        text: res.Message,
                     //        icon: "success",
                     //        showConfirmButton: false,
                     //        timer: 1500
                     //    }).then(() => {
                     //        savebtn.innerHTML = "<span style='color: #fff;'><i class='fa-regular fa-floppy-disk'></i>  Registered</span>"
                     //        document.querySelector('.Registrationcontainer').classList.remove('activeforms');
                     //        document.querySelector('.logincontainer').classList.add('activeforms');
                     //    });

                     //    savebtn.innerHTML = "<span style='color: #fff;'><i class='fa-regular fa-floppy-disk'></i>  Registered</span>"
                     //}
             });

            window.IsLoginUser({
                storageKey: "isLoggedInProgram",
                redirectUrl: '/Circuit/ProgramPartList/LogMainpage',
                expectedValue: 'true',
                redirectIfLoggedInUrl: '/Circuit/ProgramPartList/PlanSchedule',
                expirationKey: 'PartlistTime',
                maxHours: 24
            });
    </script>
