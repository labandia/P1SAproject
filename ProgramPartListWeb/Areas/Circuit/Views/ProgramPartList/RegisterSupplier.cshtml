
@{
    ViewBag.Title = "RegisterSupplier";
    Layout = "~/Areas/Circuit/Views/Shared/_LayoutPartlist.cshtml";
}


<header class="MainHeader">
    <h4>Register Supplier</h4>
    <div class="header__action flex_align">
        <div class="searchinputContainer">
            <i class="fa-solid fa-magnifying-glass"></i>
            <input type="text" placeholder="Search Plan Schedule... " id="searchbox" />
            <div class="line"></div>
        </div>
        <button class="primarybtn" id="suppbtn"><i class="fa-solid fa-plus"></i>  Register Suppliers</button>
    </div>
</header>


<div class="MainTable mt-4">
    <table>
        <thead>
            <tr>
                <th style="text-align: left; padding-left: 2em;">Ambassador</th>
                <th>Part Name </th>
                <th>Supplier</th>
                <th>Code</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody id="SupplierData">
        </tbody>
    </table>

    <div class="tableseriesNoData">
        <p>No Data Found</p>
    </div>
</div>

<div class="MasterlistWrap_footer">
    <span>Showing  <span id="pagecountID">-</span> to <span id="totalpageID">-</span> of  <span id="DatalengthID">-</span> Entries</span>

    <div id="PaginationContainer" class="paginationPartlocal"></div>
</div>


<div class="modal fade modal-m" id="addrequestmodal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">

            <div class="modal-body">
                <div class="custom_modal_header">
                    <div class="custom_modal__icon">
                        <div class="custom_icon_container">
                            <i class='bx bx-plus'></i>
                        </div>
                        <div class="custom_modal_title">
                            <span>Registered new Supplier</span>
                            <p>Fill all the required input</p>
                        </div>
                    </div>


                </div>


                <form method="post" class="mt-4" id="requestforms" autocomplete="off">
                    <div class="row">
                        <div class="form_group col-12 mb-2">
                            <label>Input Ambassador Part number: </label>
                            <input type="text" class="form-control" placeholder="Enter Ambassador partnumber" name="AbassadorPartnum" id="AbassadorPartnum" required>

                        </div>

                        <div class="form_group col-12  mb-2">
                            <label>Part Name : </label>
                            <input type="text" placeholder="Enter Part name" name="Partname" id="Partname" />
                        </div>

                        <div class="form_group col-12 mb-2">
                            <label>Supplier : </label>
                            <input type="text" placeholder="Enter Supplier name" name="Supplier" id="Supplier" />
                        </div>


                        <div class="form_group col-12 mb-2">
                            <label>Code : </label>
                            <input type="text" placeholder="Enter Supplier Code" name="Code" id="Code" />
                        </div>


                        <div class="d-flex align-items-center gap-2 justify-content-end">
                            <button type="button" class="btn btn-light btn-outline-secondary" data-bs-dismiss="modal"><i class='bx bx-x'></i> Cancel</button>
                            <button type="submit" class="btn btn-success"> Save <i class='bx bx-save'></i></button>
                        </div>
                    </div>
                </form>
            </div>

        </div>
    </div>
</div>
<div class="modal fade modal-m" id="editRequestmodal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">

            <div class="modal-body">
                <div class="custom_modal_header">
                    <div class="custom_modal__icon">
                        <div class="custom_icon_container">
                            <i class='bx bx-plus'></i>
                        </div>
                        <div class="custom_modal_title">
                            <span>Edit Supplier</span>
                            <p>Fill all the required input</p>
                        </div>
                    </div>


                </div>


                <form method="post" class="mt-4" id="Editrequestforms" autocomplete="off">
                    <div class="row">
                        <div class="form_group col-12 mb-2">
                            <label>Input Ambassador Part number: </label>
                            <input type="hidden" class="SupID" name="SupID" id="SupID">
                            <input type="text" class="AbassadorPartnum form-control" placeholder="Enter Ambassador partnumber" name="AbassadorPartnum" id="AbassadorPartnum" required>

                        </div>

                        <div class="form_group col-12  mb-2">
                            <label>Part Name : </label>
                            <input type="text" class="Partname" placeholder="Enter Part name" name="Partname" id="Partname" />
                        </div>

                        <div class="form_group col-12 mb-2">
                            <label>Supplier : </label>
                            <input type="text" class="Supplier" placeholder="Enter Supplier name" name="Supplier" id="Supplier" />
                        </div>


                        <div class="form_group col-12 mb-2">
                            <label>Code : </label>
                            <input type="text" class="Code" placeholder="Enter Supplier Code" name="Code" id="Code" />
                        </div>


                        <div class="d-flex align-items-center gap-2 justify-content-end">
                            <button type="button" class="btn btn-light btn-outline-secondary" data-bs-dismiss="modal"><i class='bx bx-x'></i> Cancel</button>
                            <button type="submit" class="btn btn-success"> Save <i class='bx bx-save'></i></button>
                        </div>
                    </div>
                </form>
            </div>

        </div>
    </div>
</div>


<script src="~/Scripts/Utilities.js"></script>
<script src="~/Scripts/html5-qrcode.min.js"></script>
<script src="~/Scripts/sweetalert2.min.js"></script>
<script src="~/Scripts/jquery-3.7.1.min.js"></script>
<script type="text/javascript">
    let supplyarray = [];

    const supplierbtn = document.getElementById("suppbtn");

    const suppplierform = document.getElementById("requestforms");
    const editsupplier = document.getElementById("Editrequestforms");

    const LoadsupplierData = async () => {
      let res = await FetchAuthenticate('@Url.Action("GetSupplierList", "ProgramPartList")', {});
      if (res && res.Success) {
            supplyarray = res.Data;
            TablePagination(supplyarray, 'SupplierData', 'PaginationContainer', 100, 5);
            $(".tableseriesNoData").hide();
      } else {
            $(".tableseriesNoData").show();
      }
    }

    supplierbtn.addEventListener('click', () => {
        $("#addrequestmodal").modal("show");
    });

    suppplierform.addEventListener('submit', async (e) => {
        e.preventDefault();

        let formData = new FormData(e.target);
        let res = await postData('@Url.Action("AddSuppliersData", "ProgramPartList")', formData);

        if (res.StatusCode == 200) {
            Swal.fire({
                title: "Success",
                text: "Add Supplier successfully",
                icon: "success",
                showConfirmButton: false,
                timer: 1500
            }).then(() => {
                LoadsupplierData();
                // Reset the form
                e.target.reset();
                $("#addrequestmodal").modal("hide");
            });

        } else {
            Swal.fire({
                icon: "error",
                text: res.Message,
                timer: 1500,
                showConfirmButton: false
            });
        }



    });
    editsupplier.addEventListener('submit', async (e) => {
        e.preventDefault();

        let formData = new FormData(e.target);
        let res = await postData('@Url.Action("AddSuppliersData", "ProgramPartList")', formData);

        if (res.StatusCode == 200) {
            Swal.fire({
                title: "Success",
                text: "Edit Supplier successfully",
                icon: "success",
                showConfirmButton: false,
                timer: 1500
            }).then(() => {
                LoadsupplierData();
                // Reset the form
                e.target.reset();
                $("#editRequestmodal").modal("hide");
            });

        } else {
            Swal.fire({
                icon: "error",
                text: res.Message,
                timer: 1500,
                showConfirmButton: false
            });
        }

    });

    LoadsupplierData();

    function TablePagination(dataArray, tableBodyId, paginationId, recordsPerPage = 7, visibleButtons = 5) {
        let currentPage = 1;
        let filteredData = [...dataArray]; // Make a copy for filtering

        const updatePaginationInfo = () => {
            const totalRecords = filteredData.length;
            const totalPages = Math.ceil(totalRecords / recordsPerPage);

            $("#totalpageID").text(totalPages);
            $("#DatalengthID").text(totalRecords);

            return totalPages;
        };

        const renderTable = (page) => {
            const totalPages = updatePaginationInfo();
            const startIndex = (page - 1) * recordsPerPage;
            const endIndex = Math.min(startIndex + recordsPerPage, filteredData.length);
            const tableBody = document.getElementById(tableBodyId);
            tableBody.innerHTML = '';

            for (let i = startIndex; i < endIndex; i++) {
                const rowData = filteredData[i];
                const usercontrols = `<button type='button' class='editButton text-primary bg-white' id='editButton_${rowData.SupID}' >
                                  <i class="fa-solid fa-pen-to-square"></i>
                               </button>`;

                const color = rowData.Color;

                const rowHtml = `
                     <tr class='row_${i} rowClick' id='editButton_${rowData.Storage_ID}'>
                         <td data-cell="Part number" style="text-align: left; padding-left: 2em; font-weight: 600;">${rowData.AbassadorPartnum}</td>
                         <td data-cell="Model">${rowData.Partname}</td>
                         <td data-cell="Supplier">${rowData.Supplier}</td>
                         <td data-cell="Code">${rowData.Code}</td>
                         <td data-cell="Action" style='display: flex; align-items: center; justify-content: center;'>${usercontrols}</td>
                     </tr>`;

                tableBody.innerHTML += rowHtml;
            }

            $("#pagecountID").text(currentPage);
        };

        const renderPagination = () => {
            const totalPages = updatePaginationInfo();
            const paginationContainer = document.getElementById(paginationId);
            paginationContainer.innerHTML = '';

            let startPage = Math.max(1, currentPage - Math.floor(visibleButtons / 2));
            let endPage = Math.min(totalPages, startPage + visibleButtons - 1);

            if (endPage > totalPages) {
                endPage = totalPages;
                startPage = Math.max(1, endPage - visibleButtons + 1);
            }

            if (totalPages <= visibleButtons) {
                startPage = 1;
                endPage = totalPages;
            }

            // Previous button
            paginationContainer.innerHTML += `<button ${currentPage === 1 ? 'disabled' : ''} onclick="changePage(${currentPage - 1})">
                                           <i class="fa-solid fa-backward"></i>
                                       </button>`;

            for (let i = startPage; i <= endPage; i++) {
                paginationContainer.innerHTML += `<button class="${i === currentPage ? 'active' : ''}" onclick="changePage(${i})">${i}</button>`;
            }

            // Next button
            paginationContainer.innerHTML += `<button ${currentPage === totalPages ? 'disabled' : ''} onclick="changePage(${currentPage + 1})">
                                           <i class="fa-solid fa-forward"></i>
                                       </button>`;
        };

        const changePage = (page) => {
            if (page >= 1 && page <= updatePaginationInfo()) {
                currentPage = page;
                renderTable(currentPage);
                renderPagination();
            }
        };

        // 🔍 Search functionality
        const searchTable = () => {
            const query = $('#searchbox').val().toLowerCase();

            filteredData = dataArray.filter(item =>
                (item.AbassadorPartnum != null && item.AbassadorPartnum.toLowerCase().includes(query)) ||
                (item.Partname != null && item.Partname.toLowerCase().includes(query))
            );

            currentPage = 1;
            renderTable(currentPage);
            renderPagination();
        };

        // Add event listener for search input
        $('#searchbox').on('input', searchTable);

        // Handle click event for edit button
        $(document).on('click', '.editButton', function (e) {
            e.stopPropagation();
            const buttonId = $(this).attr('id');
            const rowIndex = buttonId.split('_')[1];

            const result = supplyarray.find(p => p.SupID == rowIndex);

            if (result) {
               $(".SupID").val(result.SupID);
               $(".AbassadorPartnum").val(result.AbassadorPartnum);
               $(".Partname").val(result.Partname);
               $(".Supplier").val(result.Supplier);
               $(".Code").val(result.Code);
               $("#editRequestmodal").modal("show");
           }
        });

        // Initialize table and pagination
        window.changePage = changePage;
        renderTable(currentPage);
        renderPagination();
    }
</script>
