
@{
    ViewBag.Title = "San Hydro Application";
    Layout = "";
}


<head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/x-icon" href="@Url.Content("~/Content/Images/patrol .ico")">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>@ViewBag.Title</title>
    <link rel="preload" href="~/Content/fonts/Manrope-Regular.ttf" as="font" type="font/ttf" crossorigin="anonymous">


    <script src="~/Scripts/bootstrap.bundle.min.js"></script>
    <link href="~/Content/css/HydroLogin.css" rel="stylesheet" />

    @Styles.Render("~/Content/shared-css")

    @Scripts.Render("~/bundles/shared-js")
    @Scripts.Render("~/bundles/modernizr")
</head>


<div class="bg-animated"></div>

<div class="center">
    @*<div class="cardCustom">
            <h2>San Hydro App System</h2>
            <form id="logincredentials" method="post">
                <label>Username</label>
                <input type="text" name="username" id="username" placeholder="Enter Username" autocomplete="off" required />
                <label>Password</label>
                <input type="password" name="password" id="password" placeholder="Enter Password" autocomplete="new-password" required />
                <button type="submit">Sign in</button>
            </form>
            <p class="forgetbtn" id="changebtn">Change Password</p>
            <p class="selectreg" id="forgetbtn">Doesnt have an Account ?</p>
        </div>*@

    <div class="Wrapcontainer">
        <div class="carousel-container">
            <div class="hydrocenter">
                @*<img src="~/Content/Images/HydroPhonics.png" />*@

                <div class="slider">
                    <div class="slide">
                        <img src="~/Content/Images/HydroPhonics.png" />
                    </div>
                    <div class="slide">
                        <img style="width: 95%;" src="~/Content/Images/FrontImage.png" />
                    </div>
                    <div class="slide">
                        <img style="width: 95%;" src="~/Content/Images/SideImage.png" />
                    </div>
                </div>


                <div class="controls">
                    <div class="control-btn" data-index="0"></div>
                    <div class="control-btn" data-index="1"></div>
                    <div class="control-btn" data-index="2"></div>
                </div>
            </div>
            
        </div>

        <div class="login-container">
            <div class="formwrapper">
                <div class="logo">
                    <div class="logo-text">San <span>Hydro</span> </div>
                    <p style="font-weight: 400; margin: 0; margin-top: -.3em; opacity: .6;"><small>Appliances system</small></p>
                </div>

                <form id="logincredentials" method="post">
                    <div class="form-group">
                        <label for="Username">Username :</label>
                        <input type="text" name="username" id="username" placeholder="Enter Username" autocomplete="off" required >
                    </div>

                    <div class="form-group">
                        <label for="password">Password : </label>
                        <input type="password" name="password" id="password" placeholder="Enter Password" autocomplete="new-password" required>

                    </div>



                    <button type="submit" style="margin-top: 1em; padding: .5em 1em;" class="sign-in-btn"><i class="fa-solid fa-right-to-bracket"></i> Sign in</button>
                    <p class="forgetbtn" id="changebtn" style="text-align: center; margin-top: .5em;">Change Password</p>

                </form>
            </div>
        </div>
    </div>


</div>


<!-- Loader -->
<div id="loader" class="loader-overlay">
    <div class="loader-box">
        <div class="spinner"></div>
        <div>
            <div>Signing you in…</div>
            <small>Please wait while we load the Page.</small>
        </div>
    </div>
</div>





@*=================================================================================*@
@*=========================== ADD ACCOUNT  USERS ==================================*@
@*=================================================================================*@
<div class="modal fade modal-l" id="AddProductModal" tabindex="-1" role="dialog" data-bs-backdrop="static">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">

            <div class="modal-body modalwrap">
                <div class="custom_modal_header">
                    <h5>Register  Account</h5>

                    <button type="button" class="btn btn-light  close" data-bs-dismiss="modal">
                        <span>&times;</span>
                    </button>
                </div>


                <form method="post" class="addformcontainer" id="addnewform" autocomplete="off">
                    <div class="row">
                        <div class="form_group col-12 col-sm-12 col-lg-6 mb-2">
                            <label>Employee ID <small style="color: #a81818; font-weight: 600;">*</small></label> <br />
                            <input type="text" name="Employee_ID" id="Employee_ID" placeholder="Enter Employee ID" autocomplete="off" required />
                        </div>
                        <div class="form_group col-12 col-sm-12 col-lg-6 mb-2">
                            <label>Full Name <small style="color: #a81818; font-weight: 600;">*</small></label> <br />
                            <input type="text" name="FullName" id="FullName" placeholder="Enter Full Name" autocomplete="off" required />
                        </div>
                    </div>
                    <div class="form_group col-12 col-sm-12">
                        <label>Username <small style="color: #a81818; font-weight: 600;">*</small></label>
                        <input type="text" name="RegUsername" id="RegUsername" placeholder="Enter your Username" autocomplete="off" required />
                    </div>

                    <div class="form_group col-12 col-sm-12">
                        <label>Password <small style="color: #a81818; font-weight: 600;">*</small></label>
                        <input type="password" name="RegPassword" id="RegPassword" placeholder="Enter your Password" autocomplete="off" required />
                    </div>

                    <div class="form_group col-12 col-sm-12">
                        <label>Confirm Password <small style="color: #a81818; font-weight: 600;">*</small></label>
                        <input type="password" name="RegConfirmPassword" id="RegConfirmPassword" placeholder="Confirm password must be exact to the new password" autocomplete="off" required />
                    </div>

                    <div class="form_group col-12 col-sm-12 ">
                        <div class="flex_space">
                            <label>Email Address </label>
                            <small>(Only if you have an email)</small>
                        </div>
                        <input type="text" name="Email" id="Email" placeholder="Enter Email Address" autocomplete="off" />
                    </div>




                    <div class="d-flex justify-content-between align-items-center mt-4">
                        <div>
                            <small id="Errormessage"> All fields marked with (<small style="color: #a81818; font-weight: 600;">*</small>) must be filled out</small>
                        </div>
                        <button type="submit" class="primarybtn"><i class="fa-regular fa-floppy-disk"></i> Submit</button>
                    </div>
                </form>
            </div>

        </div>
    </div>
</div>

@*=================================================================================*@
@*====================== CHANGE PASSWORD OR FORGET PASSWORD =======================*@
@*=================================================================================*@
<div class="modal fade modal-l" id="ChangepasswordModal" tabindex="-1" role="dialog" data-bs-backdrop="static">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">

            <div class="modal-body modalwrap">
                <div class="custom_modal_header">
                    <h5>Change Password</h5>

                    <button type="button" class="btn btn-light  close" data-bs-dismiss="modal">
                        <span>&times;</span>
                    </button>
                </div>


                <form method="post" enctype="multipart/form-data" class="addformcontainer" id="changenewform" autocomplete="off">
                    <div class="form_group col-12 col-sm-12">
                        <label>Employee ID <small style="color: #a81818; font-weight: 600;">*</small></label> <br />
                        <input type="text" name="CEmployee_ID" id="CEmployee_ID" placeholder="Enter Employee ID" autocomplete="off" required />
                    </div>
                    <div class="form_group col-12 col-sm-12">
                        <label>Username <small style="color: #a81818; font-weight: 600;">*</small></label>
                        <input type="text" name="CUsername" id="CUsername" placeholder="Enter Username" autocomplete="off" required />
                    </div>

                    <div class="form_group col-12 col-sm-12">
                        <label>New Password <small style="color: #a81818; font-weight: 600;">*</small></label>
                        <input type="password" name="CNewPassword" id="CNewPassword" placeholder="Enter New Password" autocomplete="off" required />
                    </div>

                    <div class="form_group col-12 col-sm-12">
                        <label>Confirm Password <small style="color: #a81818; font-weight: 600;">*</small></label>
                        <input type="password" name="CConfirm" id="CConfirm" autocomplete="off" placeholder="Enter the same password" required />
                    </div>


                    <div class="d-flex justify-content-between align-items-center mt-4">
                        <div>
                            <small id="ChangeErrormessage">All fields marked with (<small style="color: #a81818; font-weight: 600;">*</small>) must be filled out</small>
                        </div>
                        <button type="submit" class="primarybtn"><i class="fa-regular fa-floppy-disk"></i> Submit</button>
                    </div>
                </form>
            </div>

        </div>
    </div>
</div>



<script type="text/javascript">
    const loader = document.getElementById('loader');
    const logform = document.getElementById('logincredentials');
    const regform = document.getElementById('addnewform');
    const changeform = document.getElementById('changenewform');


    $("#forgetbtn").on('click', (e) => {
        e.preventDefault();
        regform.reset();
        $("#AddProductModal").modal('show');
    });

    $("#changebtn").on('click', (e) => {
        e.preventDefault();
        changeform.reset();
        $("#ChangepasswordModal").modal('show');
    });


    logform.addEventListener('submit', async (e) => {
        e.preventDefault();
        console.clear();
        //const savebtn = document.querySelector("#loginbtn");
        //savebtn.innerHTML = " <div class='buttonloading'></div>";
        loader.classList.add('show');

        let formData = new FormData(e.target);
        formData.append("proj", 10);

        const data = Object.fromEntries(formData);
        let res = await postrawData('/Auth/Authenticate', data);

        if (res && res.StatusCode === 200) {
            setTimeout(() => {
                console.log(res);
                //savebtn.innerHTML = "<span style='color: #fff;'><i class='fa-solid fa-right-to-bracket'></i>  Login</span>"
                localStorage.setItem("UserID", res.Data.User_ID)
                localStorage.setItem('Logout', "/Hydroponics/Hydro/index");
                // For Info of the user
                localStorage.setItem('UserRole', res.Data.role);
                localStorage.setItem('Fullname', res.Data.fullname);

                // For Authorize User Access
                localStorage.setItem('accessToken', res.Data.access_token);
                localStorage.setItem('refreshToken', res.Data.refresh_token);

                // For Persitent Login
                localStorage.setItem('HydroTime', new Date().toISOString());
                localStorage.setItem('isLoggedInHydro', 'true');

                window.location.href = "/Hydroponics/Hydro/Inventorylist";
            }, 2000);
        } else {
            loader.classList.remove('show');
            Swal.fire({
                icon: "error",
                text: res.Message,
                timer: 1500,
                showConfirmButton: false
            });

        };
    });
    regform.addEventListener('submit', async (e) => {
        e.preventDefault();
        let formData = new FormData(e.target);
        formData.append('ProjectID', 9);

        const data = Object.fromEntries(formData);
        if (!RegisterValidationForm()) {
            //const savebtn = document.querySelector("#Regisbtn");
            //savebtn.innerHTML = " <div class='buttonloading'></div>";
            let res = await postData('/User/CreateNewUser', formData);
            if (res && res.Success) {
                Swal.fire({
                    title: "Success",
                    text: res.Message,
                    icon: "success",
                    showConfirmButton: false,
                    timer: 1500
                }).then(() => {
                    $("#AddProductModal").modal('hide');
                    $('#logshow').show();
                    regform.reset();
                    //savebtn.innerHTML = "<span style='color: #fff;'><i class='fa-regular fa-floppy-disk'></i>  Registered</span>"
                    //document.querySelector('.Registrationcontainer').classList.remove('activeforms');
                    //document.querySelector('.logincontainer').classList.add('activeforms');
                });

                //savebtn.innerHTML = "<span style='color: #fff;'><i class='fa-regular fa-floppy-disk'></i>  Registered</span>"
            } else {
                Swal.fire({
                    icon: "error",
                    text: res.Message,
                    timer: 1500,
                    showConfirmButton: false
                });
            }
        }
    });
    changeform.addEventListener('submit', async (e) => {
        e.preventDefault();
        let formData = new FormData(e.target);
        const data = Object.fromEntries(formData);

        if (ChangeValidationForm()) {
            let res = await postData('/User/ChangePassword', formData);
            if (res && res.Success) {
                Swal.fire({
                    title: "Success",
                    text: res.Message,
                    icon: "success",
                    showConfirmButton: false,
                    timer: 1500
                }).then(() => {
                    $("#ChangepasswordModal").modal('hide');
                    changeform.reset();
                    //savebtn.innerHTML = "<span style='color: #fff;'><i class='fa-regular fa-floppy-disk'></i>  Registered</span>"
                    //document.querySelector('.Registrationcontainer').classList.remove('activeforms');
                    //document.querySelector('.logincontainer').classList.add('activeforms');
                });

                //savebtn.innerHTML = "<span style='color: #fff;'><i class='fa-regular fa-floppy-disk'></i>  Registered</span>"
            } else {
                Swal.fire({
                    icon: "error",
                    text: res.Message,
                    timer: 1500,
                    showConfirmButton: false
                });
            }
        }
    });


    const RegisterValidationForm = () => {
        let pass = $("#RegPassword").val();
        let confirmpass = $("#RegConfirmPassword").val();

        if (pass !== confirmpass) {
            $("#Errormessage").text("Password does not Match");
            $("#Errormessage").css("color", "darkred");
            return true;
        }
        return false;
    };
    const ChangeValidationForm = async () => {
        let newpass = $("#CNewPassword").val();
        let confirmpass = $("#CConfirm").val();
        let employeeID = $("#CEmployee_ID").val();
        $("#ChangeErrormessage").show();

        let res = await fetchData('/User/CheckEmployeeID', { empID: employeeID });

        if (res == false) {
            $("#ChangeErrormessage").text("Employee ID is Incorrect");
            $("#ChangeErrormessage").css("color", "darkred");
            return;
        }

        if (newpass !== confirmpass) {
            $("#ChangeErrormessage").text("Password does not Match");
            $("#ChangeErrormessage").css("color", "darkred");
            return;
        }

        $("#ChangeErrormessage").hide();
    }


    $("#logshow").show();


    document.addEventListener("DOMContentLoaded", function () {
        const slides = document.querySelectorAll(".slide");
        const controls = document.querySelectorAll(".control-btn");
        let current = 0;
        let interval;

        function goToSlide(index) {
            slides[current].classList.remove("Slideactive");
            controls[current].classList.remove("Slideactive");

            current = index;

            slides[current].classList.add("Slideactive");
            controls[current].classList.add("Slideactive");
        }

        function nextSlide() {
            let next = (current + 1) % slides.length;
            goToSlide(next);
        }

        function startAutoPlay() {
            interval = setInterval(nextSlide, 5000);
        }

        function stopAutoPlay() {
            clearInterval(interval);
        }

        // ✅ Correct initialization
        slides[0].classList.add("Slideactive");
        controls[0].classList.add("Slideactive");

        controls.forEach((btn, i) => {
            btn.addEventListener("click", () => {
                goToSlide(i);
                stopAutoPlay();
                startAutoPlay();
            });
        });

        startAutoPlay();
    });




    window.IsLoginUser({
        storageKey: "isLoggedInHydro",
        redirectUrl: '/Hydroponics/Hydro/index',
        expectedValue: 'true',
        redirectIfLoggedInUrl: '/Hydroponics/Hydro/Inventorylist',
        expirationKey: 'HydroTime',
        maxHours: 24
    });

</script>

