
@{
    ViewBag.Title = "PartList";
    Layout = "~/Areas/Hydroponics/Views/Shared/HydroPartsLayout.cshtml";
}


<header class="InspectHead flex_space">
    <div class="flex_align">
        <div class="Inputcontainer">
            <i class="fa-solid fa-magnifying-glass"></i>
            <input type="text" placeholder="Search here ... " id="searchbox" autocomplete="off" />
            <div class="line"></div>
        </div>
    </div>

    <div class="flex_align">
        <div class="select-container">
            <select id="Categoryselect">
                <option value="0">-- Category --</option>
            </select>
        </div>
        <button style="display: none;" id="Showadd" class="primarybtn" type="button"><i class="fa-solid fa-user-secret"></i> Add parts</button>
    </div>
</header>

<div class="InspecTable">
    <table>
        <thead>
            <tr>
                <th style="width: 10%;"> <i class="fa-regular fa-image"></i> <span style="margin-left: .5em;">Image</span>  </th>
                <th style="width: 20%; text-align: left; padding-left: 1.5em;"><i class="fa-solid fa-screwdriver-wrench"></i>  <span style="margin-left: .5em;">Part No. / Partname</span> </th>
                <th> <i class="fa-regular fa-rectangle-list"></i> <span style="margin-left: .5em;">Category</span>  </th>
                <th> <i class="fa-regular fa-address-card"></i> <span style="margin-left: .5em;">Supplier</span>  </th>
                <th style="width: 10%;"> <span style="margin-left: .5em;">Unit Cost($)</span>  </th>
                <th style="width: 10%;">  <span style="margin-left: .5em;">Unit Cost(₱)</span>  </th>
                <th style="width: 10%;">  <span style="margin-left: .5em;">Action</span>  </th>
            </tr>
        </thead>
        <tbody id="PartlistData">
        </tbody>
    </table>
</div>

<div class="MasterlistWrap_footer ">
    <span>Showing  <span id="pagecountID">-</span> to <span id="totalpageID">-</span> of  <span id="DatalengthID">-</span> Entries</span>

    <div id="MastertableContainer" class="paginationPartlocal flex_align"></div>
</div>



@*=================================================================================*@
@*=========================== ADD PARTS CHAMBER ===================================*@
@*=================================================================================*@
<div class="modal fade modal-l" id="AddChamberModal" tabindex="-1" role="dialog" data-bs-backdrop="static">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">

            <div class="modal-body modalwrap">
                <div class="custom_modal_header">
                    <h5>Add Chamber Parts</h5>

                    <button type="button" class="btn btn-light  close" data-bs-dismiss="modal">
                        <span>&times;</span>
                    </button>
                </div>


                <form method="post" enctype="multipart/form-data" class="addformcontainer" id="addnewform" autocomplete="off">
                    <div class="row">
                        @*<div class="form_group col-12 col-sm-12 col-lg-6 mb-2">
                                <label>Employee ID </label> <br />
                                <input type="text" placeholder="type Employee ID" name="Employee_ID" id="Employee_ID" required />
                                <small class="text-danger" id="Noemployee"></small>
                            </div>*@
                        <div class="form_group col-12 col-sm-12 col-lg-12 mb-2">
                            <label>Part no.  <small style="color: #a81818; font-weight: 600;">*</small></label> <br />
                            @*<input type="text" placeholder="N/A" name="Fullname" id="Fullname" />*@
                            <div class="search-box">
                                <input type="hidden" name="Employee_ID" id="Employee_ID">
                                <input type="text" placeholder="Type Name or ID no." name="EmployeeSearch" id="EmployeeSearch" required>
                                @*<div class="namesdisplay"></div>*@
                            </div>
                        </div>
                    </div>
                    <div class="form_group col-12 col-sm-12">
                        <label>Part Name.  <small style="color: #a81818; font-weight: 600;">*</small></label>
                        <input type="text" placeholder="type Ojt registration No." name="OJTRegistration" id="OJTRegistration" required />
                    </div>

                    <div class="form_group col-12 col-sm-12 ">
                        <label>Category <small style="color: #a81818; font-weight: 600;">*</small></label> <br />
                        <div class="select-container">
                            <select id="addCategory">
                                <option value="0">-- select Category --</option>
                            </select>
                        </div>
                    </div>

                    <div class="form_group col-12 col-sm-12 ">
                        <label>Supplier <small style="color: #a81818; font-weight: 600;">*</small></label> <br />
                        <input type="text" placeholder="type Ojt registration No." name="OJTRegistration" id="OJTRegistration" required />
                    </div>

                    <div class="form_group col-12 col-sm-12 ">
                        <label>Need Quantity <small style="color: #a81818; font-weight: 600;">*</small></label> <br />
                        <input type="text" placeholder="type Ojt registration No." name="OJTRegistration" id="OJTRegistration" required />
                    </div>
                    <div class="form_group col-12 col-sm-12 ">
                        <label>Unit (ex. pcs, ml) <small style="color: #a81818; font-weight: 600;">*</small></label> <br />
                        <input type="text" placeholder="type Ojt registration No." name="OJTRegistration" id="OJTRegistration" required />
                    </div>
                    <div class="form_group col-12 col-sm-12 ">
                        <label>PHP Cost <small style="color: #a81818; font-weight: 600;">*</small></label> <br />
                        <input type="text" placeholder="type Ojt registration No." name="OJTRegistration" id="OJTRegistration" required />
                    </div>

                    <div class="d-flex justify-content-between align-items-center mt-4">
                        <div>
                            <small>All fields marked with (<small style="color: #a81818; font-weight: 600;">*</small>) must be filled out</small>
                        </div>
                        <button id="btnSave" class="primarybtn"><i class="fa-regular fa-floppy-disk"></i> Save</button>
                    </div>
                </form>
            </div>

        </div>
    </div>
</div>


@*=================================================================================*@
@*=========================== EDIT MASTERLIST PARTS =================================*@
@*=================================================================================*@
<div class="modal fade modal-xl" id="EditMasterModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-body modalwrap">
                <div class="custom_modal_header">
                    <h5>Edit Parts List</h5>

                    <button type="button" class="btn btn-light  close" data-bs-dismiss="modal">
                        <span>&times;</span>
                    </button>
                </div>

                <form id="Editmasterform" class="addformcontainer">
                   <div class="row">
                       <div class="col-6">
                           <div class="upload-container flex_center" id="upload-container">
                               <div class="upload-icon">📷</div>
                               <div class="file-info">Upload a photo of Parts.<br>Max file size: 1MB<br>png, jpg, jpeg, bmp, gif</div>
                               <input type="file" id="partsimage" name="partsimage" accept=".png,.jpg,.jpeg" class="hidden">
                               <button class="upload-btn" id="uploadBtn">Upload Photo</button>


                           </div>
                           <p>Image Preview : </p>
                           <div class="preview-container" id="previewContainer">
                               <img id="previewImage" class="preview-image" src="" alt="Image Preview">
                           </div>
                       </div>
                       <div class="col-6">
                           <div class="form_group col-12 col-sm-12 col-lg-12 mb-2">
                               <label>Part No </label> <br />
                               <input type="hidden" name="PartID" id="PartID" />
                               <input type="text" placeholder="N/A" name="PartNo" id="PartNo" />

                           </div>
                           <div class="form_group col-12 col-sm-12">
                               <label for="">Part Name  </label>
                               <input type="text" name="PartName" id="PartName" autocomplete="off">
                           </div>

                           <div class="form_group col-12 col-sm-12">
                               <div class="select-container">
                                   <select id="CategoryID" name="CategoryID">
                                       <option value="0">-- Category --</option>
                                   </select>
                               </div>
                           </div>

                           <div class="form_group col-12 col-sm-12">
                               <label for="">Supplier  </label>
                               <input type="text" name="Supplier" id="Supplier" autocomplete="off">
                           </div>

                           <div class="form_group col-12 col-sm-12">
                               <label for="">Unit Cost(PHP)  </label>
                               <input type="text" name="UnitCost_PHP" id="UnitCost_PHP" onkeypress="return restrictChars(event)" autocomplete="off">
                           </div>

                           <div class="flex_end mt-4">
                               
                               <button type="submit" class="primarybtn"><i class="fa-regular fa-floppy-disk"></i> Save</button>
                           </div>
                       </div>
                   </div>


                </form>


            </div>


        </div>
    </div>
</div>




<script type="text/javascript">
    let partlistData = [];
    let loadData = [];
    let partsID;
    let userRole;

    // Modals
    const addmodal = document.getElementById("Showadd");

    const editform = document.getElementById("Editmasterform");

    let TableDisplay = $("#PartlistData");
    const resultBox = document.querySelector(".namesdisplay");

    const PartlistTable = async () => {
        loadingDisplay();

        Loadingsteps(async () => {
            let res = await FetchAuthenticate('@Url.Action("GetPartlistData", "Hydro")', {});
            if (res && res.Success) {
                partlistData = res.Data;
                TableDisplay.empty(); // Removing the Loading Display

                InventoryPagination(partlistData, 'PartlistData', 'MastertableContainer', 50, 5);
            } else {
                const loadData = `<tr>
                  <td colspan='6'>
                      🔍 ${res.Message}
                  </td>
              </tr>`;

                TableDisplay.empty();
                TableDisplay.append(loadData);

            }
        });
    }

    const GetCategoryDatalist = async () => {
        let res = await FetchAuthenticate('@Url.Action("GetCategorylist", "Hydro")', {});

          if (res && res.Success) {

              $.each(res.Data, function (index, row) {
                  $("#Categoryselect").append("<option value='" + row.CategoryID + "'>" + row.CategoryName + "</option>");
              });

              $.each(res.Data, function (index, row) {
                  $("#addCategory").append("<option value='" + row.CategoryID + "'>" + row.CategoryName + "</option>");
              });

              $.each(res.Data, function (index, row) {
                  $("#CategoryID").append("<option value='" + row.CategoryID + "'>" + row.CategoryName + "</option>");
              });
          }
     };


    const ActionRestrict = () => {
        userRole = localStorage.getItem("UserRole");
        if (userRole === "Leader" || userRole === "Users") {
            return false;
        }
    }

    function InventoryPagination(dataArray, tableBodyId, paginationId, recordsPerPage = 7, visibleButtons = 5) {
        let currentPage = 1;
        let filteredData = [...dataArray];

        const updatePaginationInfo = () => {
            const totalRecords = filteredData.length;
            const totalPages = Math.ceil(totalRecords / recordsPerPage);
            $("#totalpageID").text(totalPages);
            $("#DatalengthID").text(totalRecords);
            return totalPages;
        };

        const renderTable = (page) => {
            const totalPages = updatePaginationInfo();
            const startIndex = (page - 1) * recordsPerPage;
            const endIndex = Math.min(startIndex + recordsPerPage, filteredData.length);
            const tableBody = document.getElementById(tableBodyId);
            tableBody.innerHTML = '';

            for (let i = startIndex; i < endIndex; i++) {
                const rowData = filteredData[i];

                // Compute by USD dollar
                let computeUSD = parseFloat(rowData.UnitCost_PHP) / 58;
                // Round off to 2 decimals
                var roundedNum = parseFloat(computeUSD.toFixed(2));
                const noImagePath = '@Url.Content("~/Content/Images/no-image.png")';
                const rowHtml = `
                    <tr  >
                        <td data-cell="Images" style='display: flex; justify-content: center; align-items: center; border-top: 1px solid #dcdce2; border-bottom: none;'>
                              <img class='NoImages' src="${noImagePath}" />
                        </td>
                        <td style='text-align: left; padding-left: 1em;' data-cell="PartNo">
                            <p style='color: #0c382ce8; font-weight: 600;'>${rowData.PartName ? rowData.PartName : "-"}</p>
                            <small> ${rowData.PartNo}</small>
                        </td>
                        <td data-cell="CategoryName">${rowData.CategoryName ? rowData.CategoryName : "-"}</td>
                        <td data-cell="Supplier">${rowData.Supplier ? rowData.Supplier : "-"}</td>
                        <td data-cell="UnitUSD">${roundedNum}</td>
                        <td data-cell="UnitUSD">${rowData.UnitCost_PHP}</td>
                        <td data-cell="Delete" >
                         <div class='flex_center'>
                             <button  class='Editbtnbutton text-danger bg-white' id='editButton_${rowData.PartID}' ">
                                <i class="fa-solid fa-xmark"></i>
                             </button>
                         </div>
                    </tr>
                `;
                tableBody.innerHTML += rowHtml;
            }

            $('.dropdown-menu').removeClass('show').hide();
            $("#pagecountID").text(currentPage);
        };

        const renderPagination = () => {
            const totalPages = updatePaginationInfo();
            const paginationContainer = document.getElementById(paginationId);
            paginationContainer.innerHTML = '';

            let startPage = Math.max(1, currentPage - Math.floor(visibleButtons / 2));
            let endPage = Math.min(totalPages, startPage + visibleButtons - 1);

            if (endPage > totalPages) {
                endPage = totalPages;
                startPage = Math.max(1, endPage - visibleButtons + 1);
            }

            if (totalPages <= visibleButtons) {
                startPage = 1;
                endPage = totalPages;
            }

            // Previous button
            paginationContainer.innerHTML += `<button ${currentPage === 1 ? 'disabled' : ''} onclick="changePage(${currentPage - 1})">
                <i class="fa-solid fa-backward"></i>
            </button>`;

            for (let i = startPage; i <= endPage; i++) {
                paginationContainer.innerHTML += `<button class="${i === currentPage ? 'active' : ''}" onclick="changePage(${i})">${i}</button>`;
            }

            // Next button
            paginationContainer.innerHTML += `<button ${currentPage === totalPages ? 'disabled' : ''} onclick="changePage(${currentPage + 1})">
                <i class="fa-solid fa-forward"></i>
            </button>`;
        };

        const changePage = (page) => {
            if (page >= 1 && page <= updatePaginationInfo()) {
                currentPage = page;
                renderTable(currentPage);
                renderPagination();
            }
        };

        $(document).on('click', '.Editbtnbutton', function (e) {
            e.stopPropagation(); // Prevent triggering the row click event
            var rowId = $(this).attr('id');
            var rowIndex = rowId.split('_')[1];
            var filterdata = partlistData.find(item => item.PartID === parseInt(rowIndex));
            $("#PartID").val(filterdata.PartID);
            $("#PartNo").val(filteredData.PartNo);
            $("#PartName").val(filterdata.PartName);
            $("#PartNo").val(filterdata.PartNo);
            $("#Supplier").val(filterdata.Supplier);
            $("#UnitCost_PHP").val(filterdata.UnitCost_PHP);
            $("#CategoryID").val(filterdata.CategoryID);

            $("#EditMasterModal").modal("show");
        });


        const searchTable = () => {
            const query = $('#searchbox').val().toLowerCase() || '';
            filteredData = dataArray.filter(item =>
                item.PartName.toLowerCase().includes(query) || item.PartNo.toLowerCase().includes(query)
            );
            currentPage = 1;
            renderTable(currentPage);
            renderPagination();
        };

        $('#searchbox').on('input', searchTable);

        window.changePage = changePage;
        renderTable(currentPage);
        renderPagination();
    }


    $("#searchPartno").keyup(function () {
        let result = [];
        let input = this.value;

        if (input.length > 0) {
            result = Inventlist.filter((item) => {
                return item.PartNo.toLowerCase().includes(input.toLowerCase()) ||
                    item.PartName.toLowerCase().includes(input.toLowerCase())
            });

            if (result.length > 0) {
                resultBox.style.display = 'block';
                display(result); // assumes display() handles array of objects
            } else {
                resultBox.style.display = 'none';
            }
        } else {
            resultBox.style.display = 'none';
        }
    });



    $("#Categoryselect").on('change', function (e) {
        e.preventDefault();
        let filterdata = partlistData.filter(item => item.CategoryID === parseInt(e.target.value));
        if (parseInt(e.target.value) !== 0) {
            InventoryPagination(filterdata, 'PartlistData', 'MastertableContainer', 50, 5);
        } else {
            InventoryPagination(partlistData, 'PartlistData', 'MastertableContainer', 50, 5);
        }
    });


    function display(result) {
        const content = result.map((list) => {
            return `<li onclick="selectinput(this)" data-id="${list.PartID}">${list.PartName}</li>`;
        });

        resultBox.innerHTML = "<ul>" + content.join('') + "</ul>";
    }

    function selectinput(list) {
        const ID = list.getAttribute("data-id");
        partsID = ID;
        $("#AddPartID").val(ID);
        $("#searchPartno").val(list.innerHTML);
        resultBox.innerHTML = '';
        resultBox.style.display = 'none';
    }

    const getStatusClass = (status) => {
        switch (status) {
            case "OK": return "StocksGood";
            case "LOW STOCK": return "Low";
            case "WARNING": return "Warning";
            default: return "Incomplete";
        }
    };


    addmodal.addEventListener('click', (e) => {
        e.preventDefault();
        $("#AddChamberModal").modal('show');
    });

    editform.addEventListener('submit', async function (e) {
        e.preventDefault();

        let formData = new FormData(e.target);
        const data = Object.fromEntries(formData);
        let res = await postData('@Url.Action("EditPartslist", "Hydro")', formData);
        console.log(data);
        console.log(res);
         //if (res && res.Success) {
         //     Swal.fire({
         //         title: "Success",
         //         text: res.Message,
         //         icon: "success",
         //         showConfirmButton: false,
         //         timer: 1500
         //     }).then(() => {
         //         setTimeout(() => {
         //             window.location.href = "/Hydroponics/Hydro/Inventorylist";
         //         }, 3000);
         //     });
         // }
    });

    document.addEventListener('DOMContentLoaded', function () {
        const InputFile = document.getElementById('partsimage');
        const uploadbtn = document.getElementById('uploadBtn');
        //const savebtn = document.getElementById('saveBtn');

        const previewContainer = document.getElementById('previewContainer');
        const previewImage = document.getElementById('previewImage');

        // Handle Upload button Click
        uploadbtn.addEventListener('click', function (e) {
            e.preventDefault();
            InputFile.click();
        });

        // Handle Functional of File Input Upload
        InputFile.addEventListener('change', function (e) {
            e.preventDefault();
            //Check if the Image data exist
            if (e.target.files.length > 0) {
                const file = e.target.files[0];

                // Check the file size (Max 1 MB)
                if (file.size > 1024 * 1024) {
                    alert('File size exceeds 1MB limit');
                    return;
                }
                // Check file Type
                const validTypes = ['image/png', 'image/jpeg', 'image/jpg', 'image/bmp', 'image/gif'];

                if (!validTypes.includes(file.type)) {
                    alert("Invalid file type, Please upload a png, jpeg, bmp or gif file");
                    return;
                }

                //Create a Preview Image When the Upload the file
                const reader = new FileReader();
                reader.onload = function (e) {
                    previewImage.src = e.target.result;
                    previewContainer.style.display = 'block';
                };
                reader.readAsDataURL(file);
            }
        });


        // handle save button click
        //savebtn.addEventListener('click', function (e) {
        //    e.preventDefault();

        //    //validate the form
        //    if (!InputFile.files || InputFile.files.length === 0) {
        //        alert("Please upload an image of your signature before saving");
        //        return;
        //    }


        //    const formData = new FormData();
        //    formData.append('SignatureImage', InputFile.files[0]);
        //    formData.append('UserID', UserID);

        //    const data = Object.fromEntries(formData);

        //    //$.ajax({
        //    //    url: '/User/UploadSignature',
        //    //    type: 'POST',
        //    //    data: formData,
        //    //    processData: false,
        //    //    contentType: false,
        //    //    success: function (res) {
        //    //        if (res && res.success) {
        //    //            InputFile.value = '';
        //    //            previewImage.src = '';
        //    //            previewContainer.style.display = 'none';
        //    //            $("#uploadmodal").modal("hide");
        //    //        }
        //    //    },
        //    //    error: function (xhr, status, error) {
        //    //        //$('#signatureImageError').text('An error occurred: ' + error);
        //    //    },
        //    //    complete: function () {
        //    //        //saveBtn.prop('disabled', false).text('Save');
        //    //    }
        //    //});

        //    // Reset the form


        //});
    });





    function loadingDisplay() {
        TableDisplay.empty();
        const loadData = `<tr>
                            <td colspan='7'>
                                <div class='Loadercontainer'>
                                    <span class="loader"></span>
                                    <p id="loadingStepText">Fetching data from the database..</p>
                                </div>
                            </td>
                        </tr>`;
        TableDisplay.append(loadData);
    }
    function Loadingsteps(callback) {
        const steps = [
            "Fetching data from the database...",
            "Processing data...",
            "Finalizing table view..."
        ];

        let stepIndex = 0;

        const interval = setInterval(() => {
            if (stepIndex < steps.length) {
                const stepText = document.getElementById("loadingStepText");
                if (stepText) stepText.innerText = steps[stepIndex];
                stepIndex++;
            } else {
                clearInterval(interval);
                if (typeof callback === "function") callback();
            }
        }, 800);
    }



    // ############## DISPLAY ALL THE DATA TO THE PAGE ########################
    const LoadPageData = async () => {
        try {

            const [invent, drop] = await Promise.all([
                PartlistTable(),
                GetCategoryDatalist()
            ]);
        } catch (error) {
            console.error("Failed to load page data:", error);
        } finally {
            // Hide loading spinner whether success or failure
            //$("#loadingSpinner").hide();
        }
    }

    $(document).ready(() => {
        LoadPageData();
    });
</script>
