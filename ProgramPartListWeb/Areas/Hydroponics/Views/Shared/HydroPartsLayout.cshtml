<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/x-icon" href="~/Content/Images/patrol .ico">
    <meta name="description" content="Learn how to improve your website with caching, accessibility, and SEO best practices.">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>San Hydro Appliance System</title>
    <link rel="preload" href="@Url.Content("~/Content/fonts/Poppins-Regular.ttf")" as="font" type="font/ttf" crossorigin="anonymous">

    <script src="~/Scripts/bootstrap.min.js"></script>
    <script src="~/Scripts/Popper.min.js"></script>

    @Styles.Render("~/Content/shared-css")
    @Styles.Render("~/Content/Hydro-css")

    @Scripts.Render("~/bundles/shared-js")
    @Scripts.Render("~/bundles/modernizr")
</head>
<body>
    <!--========== SIDEBAR ==========-->
    <!-- Sidebar -->
    <div class="sidebar">
        <div class="logo">
            <div class="logo-text">San <span>Hydro</span> </div>
            <p style="font-weight: 400; font-size: .8rem; margin: 0; margin-top: -.3em; opacity: .6;"><small>Appliance system</small></p>
        </div>

        <div class="nav-menu">
            <a href="/Hydroponics/Hydro/Orderpage" class="nav-item">
                <i class="fas fa-box"></i>
                <span class="nav-text">Request Chambers</span>
            </a>

            <a href="/Hydroponics/Hydro/Chambers" class="nav-item">
                <i class="fa-solid fa-x-ray"></i>
                <span class="nav-text">Hydroponics Chambers</span>
            </a>
            <a href="/Hydroponics/Hydro/Inventorylist" class="nav-item">
                <i class="fas fa-warehouse"></i>
                <span class="nav-text">Inventory</span>
            </a>

            @*<a href="/Hydroponics/Hydro/PartList" class="nav-item">
            <i class="fa-solid fa-table-list"></i>
            <span class="nav-text">Parts List</span>
        </a>*@
            @*<a href="/Hydroponics/Hydro/TransactionHistory" class="nav-item">
            <i class="fa-solid fa-clock-rotate-left"></i>
            <span class="nav-text">Transaction History</span>
        </a>*@
            <a href="/Hydroponics/Hydro/UserManage" class="nav-item">
                <i class="fas fa-users"></i>
                <span class="nav-text">Manage Users</span>
            </a>

        </div>
    </div>

    <!-- Main Content -->
    <div class="main-content">
        <header>
            <h3 class="page-title" id="titlepage">Request Chambers</h3>
            <div class="header-controls">
                <button class="mobile-menu-btn">
                    <i class="fas fa-bars"></i>
                </button>
                <div class="user-info">
                    <div class="notification-bell" id="notificationBell">
                        <i class="fas fa-bell"></i>
                        <span class="notification-badge" id="notificationBadge">1</span>
                    </div>
                    <div class="user-avatar" id="user-avatar">JD</div>

                    <div class="menu">
                        <div class="menu_header">
                            <p id="DisplayName"></p>
                            <small id="role">Administrator</small>
                        </div>
                        <ul>
                            <li><a href="#"><i class="ph-bold ph-user"></i> <i class="fa-solid fa-key"></i> Change Password</a></li>
                            <li><a id="logID" href="#"><i class="ph-bold ph-sign-out"></i><i class="fa-solid fa-door-open"></i>Sign Out</a></li>
                        </ul>
                    </div>


                    <!-- Notification Dropdown -->
                    @*<div id="notificationDropdown">
                            <ul id="stockAlerts">
                                <li style="padding:10px; text-align:center; color:gray;">No alerts</li>
                            </ul>
                        </div>*@

                    <div class="notification-dropdown dd" id="notificationDropdown">
                        <div class="arrow-up"></div>
                        <div class="header">
                            <div class="Cuscontainer">
                                <div class="text fl">Notifications</div>
                                <div class="notify-count common-count count2 fl" count="0" id="countinside">
                                    <div class="value">0</div>
                                </div>
                            </div>
                        </div>
                        <div class="items" id="stockAlerts">

                        </div>
                    </div>



                </div>
            </div>
        </header>

        <div class="content-wrapper">
            <main>
                @RenderBody()
            </main>
        </div>
    </div>



    @*=================================================================================*@
    @*=========================== SEE THE NOTIFICATION ================================*@
    @*=================================================================================*@
    <div class="modal fade modal-xl" id="NotificationModal" tabindex="-1" role="dialog" data-bs-backdrop="static">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">

                <div class="modal-body modalwrap">
                    <div class="custom_modal_header">
                        <div>
                            <h2 style="margin:0; font-size:20px; color:#333333;">📦 Stock Alert Summary</h2>
                            <p style="font-size:14px; color:#555555; margin:10px 0 20px 0;">
                                Below are the items with Low, Critical, or Out of Stock levels:
                            </p>

                        </div>

                        <div class="flex_align">
                            <button class="btn btn-primary" onclick="generateStockRequestReport()">
                                <i class="fas fa-file-pdf"></i> Generate PDF
                            </button>
                            <button type="button" class="btn btn-light  close" data-bs-dismiss="modal">
                                <span>&times;</span>
                            </button>
                        </div>

                    </div>


                    <table width="100%" cellpadding="5" cellspacing="0" border="1" style="border-collapse:collapse; font-size:14px;">
                        <tr style="background-color:#f5f5f5; color:#333333; font-weight: 600 !important; text-align:left;">
                            <th align="left" style="text-align: left; padding-left: 1.5em !important;">PartNo/PartName</th>
                            <th align="left">Current Stock</th>
                            <th align="left">Minimum Stock</th>
                            <th align="left">Status</th>
                        </tr>
                        <tbody id="NotificationBody">
                        </tbody>
                    </table>

                    <p style="margin-top:20px; font-size:12px; color:#777777; text-align: center;">
                        ⚠️ Please review inventory and take necessary actions.<br>
                    </p>
                </div>

            </div>
        </div>
    </div>






    <script src="~/Scripts/jspdf.umd.min.js"></script>
    <script type="text/javascript">
        let Stockitems = [];

        const isDev = window.location.hostname === "localhost";

        /*==================== LINK ACTIVE ====================*/
        const linkColor = document.querySelectorAll('.nav-item')

        function colorLink() {
            linkColor.forEach(l => l.classList.remove('active'))
            this.classList.add('active')
        }

        linkColor.forEach(l => l.addEventListener('click', colorLink))

        document.addEventListener("DOMContentLoaded", function () {
            var currentUrl = window.location.pathname.toLowerCase();
            document.querySelectorAll(".nav-item").forEach(function (link) {
                if (link.getAttribute("href").toLowerCase() === currentUrl) {
                    link.classList.add("active");

                    let actionpage = currentUrl.substring(currentUrl.lastIndexOf("/") + 1);


                    switch (actionpage) {
                        case "orderpage":
                            $("#titlepage").html(`<i class="fas fa-clipboard-list"></i> Manage Chamber Request`);
                            break;
                        case "chambers":
                            $("#titlepage").html(`<i class="fa-solid fa-x-ray"></i>  Hydroponic Chamber`);
                            break;
                        case "inventorylist":
                            $("#titlepage").html(`<i class="fa-solid fa-boxes-packing"></i>  Inventory Management`);
                            break;
                        case "partlist":
                            $("#titlepage").html(`<i class="fa-solid fa-table-list"></i> Parts Masterlist`);
                            break;
                        case "requeststock":
                            $("#titlepage").html(`<i class="fas fa-clipboard-list"></i> Manage Stock Requests`);
                            break;
                        case "transactionhistory":
                            $("#titlepage").html(`<i class="fa-solid fa-clock-rotate-left"></i> Transaction History`);
                            break;
                        case "usermanage":
                            $("#titlepage").html(`<i class="fas fa-users"></i>  User Management`);
                            break;
                    }

                }
            });
        });

        // Simple filter button functionality
        document.querySelectorAll('.filter-btn').forEach(button => {
            button.addEventListener('click', function () {
                document.querySelectorAll('.filter-btn').forEach(btn => {
                    btn.classList.remove('active');
                });
                this.classList.add('active');
            });
        });

        // Mobile menu toggle
        document.querySelector('.mobile-menu-btn').addEventListener('click', function () {
            const sidebar = document.querySelector('.sidebar');
            if (window.innerWidth <= 768) {
                sidebar.style.display = sidebar.style.display === 'none' ? 'block' : 'none';
            }
        });

        // Adjust sidebar on resize
        window.addEventListener('resize', function () {
            if (window.innerWidth > 768) {
                document.querySelector('.sidebar').style.display = 'block';
            } else {
                document.querySelector('.sidebar').style.display = 'none';
            }
        });

        // Initialize for mobile
        if (window.innerWidth <= 768) {
            document.querySelector('.sidebar').style.display = 'none';
        }

 let unseenCount = 0;

 // Toggle dropdown
 $("#notificationBell").click(function () {
     $("#notificationDropdown").toggle();
     unseenCount = 0; // ✅ reset unseen count
 });


 // Hide dropdown if clicking outside
 $(document).click(function (e) {
     if (!$(e.target).closest("#notificationBell, #notificationDropdown").length) {
         $("#notificationDropdown").hide();
     }
 });

 let lastCheck = null;

  //CHECKING OF STOCKS AND GENERATE A NOTIFICATION 
async function pollStockAlerts() {
     try {
         const response = await $.ajax({
             url: '@Url.Action("GetStockAlerts", "Stock")',
             type: 'GET',
             dataType: 'json'
         });

         if (response.Success) {
             GetNotification();
         }
     } catch (error) {
         console.warn("Error fetching stock alerts:", error);
     }
 }

 async function GetNotification() {
     let ID = parseInt(localStorage.getItem("UserID"));
     $("#notificationBadge").hide();

       const response = await $.ajax({
           url: '@Url.Action("GetNoficationDisplay", "Stock")',
           data: { userID: ID },
           type: 'GET',
           dataType: 'json'
       });


     if (response.Success) {
         const container = $("#stockAlerts");
         container.empty();

         const countUnread = response.Data.filter(item => item.IsRead === false).length;
         if (countUnread !== 0) {
             $("#countinside").text(countUnread);
             $("#notificationBadge").text(countUnread);

             $("#notificationBadge").show();
         } else {
             $("#notificationBadge").hide();
         }



         if (!response.Data || response.Data.length === 0) {
             container.append('<li style="padding:10px; text-align:center; color:gray;">No alerts</li>');
         } else {
             response.Data.forEach(alert => {
                 container.append(
                     `<div class="list-item"  id='Details_${alert.NotificationId}'>
                             <p>${alert.Title}</p>
                             <small>${alert.CreatedDate}</small>
                         </div>`
                 );
             });


         }
     }


 }

        $(document).on('click', '.list-item', async function (e) {
            e.stopPropagation(); // Prevent triggering the row click event
            var rowId = $(this).attr('id');
            var rowIndex = rowId.split('_').slice(1).join('_');
            Stockitems = [];
            let ID = parseInt(localStorage.getItem("UserID"));

           const response = await $.ajax({
              url: '@Url.Action("GetNoficationDetailsDisplay", "Stock")',
              data: { Notify: rowIndex, userID: ID },
              type: 'GET',
              dataType: 'json'
           });


            if (response.Success) {
                $("#countinside").text("0");
                $("#notificationBadge").hide();
                $("#notificationDropdown").hide();
                const container = $("#NotificationBody");
                container.empty();

                Stockitems = response.Data;
                console.log(Stockitems);

                Stockitems.forEach(res => {
                    let stats = res.Status;
                    let backolor;

                    if (stats === 'Restock') {
                        backolor = 'background-color:#fff3cd; color:#856404;';
                    } else {
                        backolor = 'background-color:#dc3545; color:#ffffff;';
                    }

                    container.append(
                        `<tr>
                    <td style='text-align: left; padding-left: 1.5em !important;'>
                        <div>
                            <p style='color: #185d8b; font-weight: 600;'>${res.PartName ? res.PartName : "-"}</p>
                            <small>${res.PartNo}</small>
                        </div>
                    </td>
                    <td>${res.CurrentQty}</td>
                    <td>${res.ReorderLevel}</td>
                    <td style="${backolor}">${res.Status}</td>
                </tr>`
                    );
                });
            }



            $("#NotificationModal").modal("show");
        });



        let profile = document.querySelector('.user-avatar');

        profile.onclick = function () {
            let menu = document.querySelector('.menu');
            menu.classList.toggle('menuactive');
        }


        const logbtn = document.getElementById("logID");

        logbtn.addEventListener('click', function (e) {
            e.preventDefault();
            Swal.fire({
                title: "Sign out ?",
                text: "Are you sure you want to sign out?",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#a3a3a3",
                confirmButtonText: "Log out"
            }).then((result) => {
                /* Read more about isConfirmed, isDenied below */
                if (result.isConfirmed) {
                    localStorage.removeItem("Fullname");
                    localStorage.removeItem("UserRole");
                    localStorage.removeItem('accessToken');
                    localStorage.removeItem('refreshToken');
                    logout();
                }
            });
        });



        function generateStockRequestReport() {
            const { jsPDF } = window.jspdf;
            const doc = new jsPDF();

            // Add header
            doc.setFontSize(20);
            doc.setTextColor(40, 40, 40);
            doc.text('INVENTORY STOCK SUMMARY', 105, 20, { align: 'center' });

            doc.setFontSize(10);
            doc.setTextColor(100, 100, 100);
            doc.text(`Generated on: ${new Date().toLocaleDateString('en-PH', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' })}`, 105, 28, { align: 'center' });
            doc.text(`San Hydro Appliance System`, 105, 34, { align: 'center' });

            // Add summary
            let yPosition = 50;
            doc.setFontSize(12);
            doc.setTextColor(40, 40, 40);
            doc.setFont(undefined, 'bold');
            doc.text('SUMMARY OVERVIEW', 14, yPosition);
            yPosition += 8;

            doc.setFontSize(9);
            doc.setFont(undefined, 'normal');
            doc.setTextColor(80, 80, 80);

            //const totalItems = inventoryData.length;
            const lowStockItems = Stockitems.filter(item => item.Status === 'Restock').length;
            const outOfStockItems = Stockitems.filter(item => item.Status === 'Out of stocks').length;
            //const totalValue = inventoryData.reduce((sum, item) => sum + (item.currentStock * item.unitCost), 0);

            //doc.text(`• Total Inventory Items: ${totalItems}`, 20, yPosition);
            //yPosition += 5;
            doc.text(`• Low Stock Items (Need Restock): ${lowStockItems}`, 20, yPosition);
            yPosition += 5;
            doc.text(`• Out of Stock Items (Critical): ${outOfStockItems}`, 20, yPosition);
            yPosition += 5;
            //doc.text(`• Total Inventory Value: ₱${totalValue.toLocaleString('en-PH', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`, 20, yPosition);
            //yPosition += 15;

            // Add table headers
            doc.setFontSize(9);
            doc.setFont(undefined, 'bold');
            doc.setTextColor(255, 255, 255);
            doc.setFillColor(102, 126, 234);
            doc.rect(14, yPosition, 182, 8, 'F');

            const headers = ['Part No', 'Part Name', 'Stock', 'Unit', 'Status'];
            const columnWidths = [40, 40, 40, 40, 40];
            let xPosition = 16;

            headers.forEach((header, index) => {
                doc.text(header, xPosition, yPosition + 6);
                xPosition += columnWidths[index];
            });

            yPosition += 12;

            //// Add table rows
            doc.setFont(undefined, 'normal');
            doc.setTextColor(40, 40, 40);

            let rowCount = 0;
            Stockitems.forEach(item => {
                if (yPosition > 270) {
                    doc.addPage();
                    yPosition = 20;
                    // Add header on new page
                    doc.setFontSize(10);
                    doc.setTextColor(100, 100, 100);
                    doc.text('Inventory Status Report - Page ' + (doc.internal.getNumberOfPages()), 105, 10, { align: 'center' });
                    yPosition = 30;
                }

                if (rowCount % 2 === 0) {
                    doc.setFillColor(245, 246, 250);
                    doc.rect(14, yPosition - 4, 182, 6, 'F');
                }

                // Part No
                xPosition = 16;
                const partNo = item.PartNo.length > 20 ? item.PartNo.substring(0, 20) + '...' : item.PartNo;
                doc.text(partNo, xPosition, yPosition);
                xPosition += columnWidths[0];

                // Part Name
                const partName = item.PartName.length > 20 ? item.PartName.substring(0, 20) + '...' : item.PartName;
                doc.text(partName, xPosition, yPosition);
                xPosition += columnWidths[1];

                 //Stock Quantity
                doc.text(item.CurrentQty.toString(), xPosition, yPosition);
                xPosition += columnWidths[2];
                //// UNit 
                doc.text(item.WarningLevel.toString(), xPosition, yPosition);
                xPosition += columnWidths[3];

                // Color code status
                //if (item.Status === 'Out of stocks') doc.setTextColor(220, 53, 69);
                //else if (item.Status === 'Restock') doc.setTextColor(255, 193, 7);
                //else doc.setTextColor(40, 167, 69);
                doc.text(item.Status, xPosition, yPosition);
                xPosition += columnWidths[4];


                // Set to new Row
                yPosition += 6;
                rowCount++;
            });

            //// Add summary at the end
            //if (yPosition > 250) {
            //    doc.addPage();
            //    yPosition = 20;
            //}

            yPosition += 10;
            doc.setFontSize(11);
            doc.setFont(undefined, 'bold');
            doc.setTextColor(40, 40, 40);
            doc.text('REPORT SUMMARY', 14, yPosition);
            yPosition += 8;

            doc.setFontSize(9);
            doc.setFont(undefined, 'normal');
            doc.text(`Report generated: ${new Date().toLocaleString('en-PH')}`, 14, yPosition);
            yPosition += 5;
            //doc.text(`Total items in inventory: ${totalItems}`, 14, yPosition);
            //yPosition += 5;
            //doc.text(`Items requiring attention: ${lowStockItems + outOfStockItems}`, 14, yPosition);
            //yPosition += 5;
            //doc.text(`Total inventory value: ₱${totalValue.toLocaleString('en-PH', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`, 14, yPosition);

            // Save the PDF
            doc.save(`inventory-report-${new Date().toISOString().split('T')[0]}.pdf`);
        }




        const GetFullname = async () => {
            var x = localStorage.getItem("Fullname") || "Guest user";
            let initials = getInitials(x);
            $("#DisplayName").text(x);
            $("#user-avatar").text(initials);
        };

        function getInitials(name) {
            return name
                .split(" ")                // split into words
                .map(word => word.charAt(0).toUpperCase()) // take first letter
                .join("");                 // join together
        }


        $(document).ready(function () {

            // For  sending email notification for stock alert
            try {
                $.ajax({
                    url: '@Url.Action("StocksAlertEmailNotification", "Stock")',
                    type: 'POST',
                    success: function (response) {
                        if (response.Success && response.StatusCode === 200) {
                            console.log("Stock alert email sent successfully.");
                        }
                    },
                    error: function (xhr, status, error) {
                        if (isDev) console.error("Failed to send stock alert email:", error);
                    }
                });
            } catch (e) {
                 if (isDev) console.warn("Error fetching stock alerts:", e);
            }
        });


        window.IsLoginUser({
            storageKey: "isLoggedInHydro",
            redirectUrl: '/Hydroponics/Hydro/Inventorylist',
            expectedValue: 'true',
            expirationKey: 'HydroTime',
            maxHours: 24
        });



        // ========================== INITIAL LOAD ==============================
        $(document).ready(async () => {
            await Promise.all([GetFullname(), pollStockAlerts(), GetNotification()]);
        });
    </script>


</body>
</html>
