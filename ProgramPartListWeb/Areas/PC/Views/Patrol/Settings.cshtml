
@{
    ViewBag.Title = "Settings";
    Layout = "~/Areas/PC/Views/Shared/_PatrolLayout.cshtml";
}


<header>
    <h4 class="header__title">Account Settings</h4>
</header>



<div class="user__info">
    @*<img src="~/Content/Images/noimage.png" />*@
    <div class="user__names">
        <span id="fullnametext2"></span>
        <p id="Roles2"></p>
    </div>
</div>

<hr />

<h5 style="font-weight: 600;">Change password</h5>

<form class="ChangepassContainer" id="changeform">
    <div class="change__group">
        <label>Current Password :</label>
        <i class="fa fa-check-circle" aria-hidden="true" id="currentcheck"></i>
        <i class="fa fa-times-circle" aria-hidden="true" id="currentWrong"></i>
        <input type="password" name="currentpassword" id="currentpassword" placeholder="Input your old password" autofocus autocomplete="off" />
    </div>
    <div class="change__group">
        <label>New Password :</label>
        <i class='bx bx-check' id="newcheck"></i>
        <i class='bx bxs-x-circle' id="newwrong"></i>
        <input type="password" name="newpassword" id="newpassword" placeholder="input new password" autocomplete="off" />
    </div>

    <div class="change__group">
        <label>Confirm Password :</label>
        <i class="fa fa-check-circle" aria-hidden="true" id="confirmcheck"></i>
        <i class="fa fa-times-circle" aria-hidden="true" id="confirmwrong"></i>

        <input type="password" name="confirmpassword" id="confirmpassword" placeholder="Verify the password" autocomplete="off" />
    </div>

    <button type="submit" class="primarybtn"><i class="fa-regular fa-floppy-disk"></i>  Save changes</button>
</form>

<script src="~/Scripts/Utilities.js"></script>
<script type="text/javascript">

    const forms = document.getElementById('changeform');

    forms.addEventListener('submit', async (e) => {
        e.preventDefault();

        if (Validateform()) {

        }
    });


    function Validateform() {
        let samplepass = "1234";
        const current = document.getElementById("currentpassword").value;

        if (current === "") {
            $("#currentWrong").show();
            return;
        } else {
            $("#currentWrong").hide();

            var checkcurrent = CheckforCurrentPassword(currentpassword, current);

            if (checkcurrent) {

                $("#currentWrong").show();
                $("#currentcheck").hide();
                check = false;
            } else {
                $("#currentcheck").show();
                $("#currentWrong").hide();
            }
        }

        
    }
    async function Getuserinfo() {
        const accessToken = localStorage.getItem('accessToken');
        const result = await FetchAuthenticate('/User/GetUserInformation', { accessToken });
        console.log(result);
        //if (result.success) {
        //    console.log("Welcome", result.name, "Role:", result.role);
        //} else {
        //    console.error(result.message);
        //}
    }



    function CheckforCurrentPassword(current, newpass) {

    }


    const initialized = () => {
        Getuserinfo();

        $("#currentcheck").hide();
        $("#currentWrong").hide();

        $("#confirmcheck").hide();
        $("#confirmwrong").hide();
    }

    initialized();
</script>