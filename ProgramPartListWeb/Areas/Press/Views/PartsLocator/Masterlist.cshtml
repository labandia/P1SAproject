
@{
    ViewBag.Title = "Masterlist";
    Layout = "~/Areas/Press/Views/Shared/_PartsLocator.cshtml";
}

<div class="MasterlistWrap">
    <div class="MasterlistWrap__header">
        <h1>Products Masterlist</h1>

        <div class="MasterlistAction">
            <div class="mastelistfilter">
                <div class="select-container">
                    <select id="selections">
                        <option value="-1">--SELECT ID NOTE -- </option>
                    </select>
                </div>
            </div>
            <div class="masterlistInput">
                <input type="text" placeholder="Search here ... " id="searchbox" />
                <div class="line"></div>
                <i class="fa-solid fa-magnifying-glass"></i>
            </div>
        </div>
    </div>

    <div class="MainTable">
        <table id="MasterlistTable">
            <thead>
                <tr>
                    <th>Part number</th>
                    <th>Model</th>
                    <th>Racks</th>
                    <th>Level</th>
                    <th>Post</th>
                    <th>Box number</th>
                    <th>ID note Color</th>
                    <th>Quantity</th>
                    <th>Edit</th>
                </tr>
            </thead>
            <tbody id="MasterlistData">
                <!-- Rows inserted by JavaScript -->
            </tbody>
        </table>
    </div>


    <div class="Lackloading">
        <div class="loading-container">
            <table>
                <thead>
                    <tr>
                        <th>-</th>
                        <th>-</th>
                        <th>-</th>
                        <th>-</th>
                        <th>-</th>
                        <th>-</th>
                        <th>-</th>
                        <th>-</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><div class="skeleton" style="width: 80%;"></div></td>
                        <td><div class="skeleton" style="width: 90%;"></div></td>
                        <td><div class="skeleton" style="width: 60%;"></div></td>
                        <td><div class="skeleton" style="width: 80%;"></div></td>
                        <td><div class="skeleton" style="width: 90%;"></div></td>
                        <td><div class="skeleton" style="width: 60%;"></div></td>
                        <td><div class="skeleton" style="width: 80%;"></div></td>
                        <td><div class="skeleton" style="width: 90%;"></div></td>
                    </tr>
                    <tr>
                        <td><div class="skeleton" style="width: 80%;"></div></td>
                        <td><div class="skeleton" style="width: 90%;"></div></td>
                        <td><div class="skeleton" style="width: 60%;"></div></td>
                        <td><div class="skeleton" style="width: 80%;"></div></td>
                        <td><div class="skeleton" style="width: 90%;"></div></td>
                        <td><div class="skeleton" style="width: 60%;"></div></td>
                        <td><div class="skeleton" style="width: 80%;"></div></td>
                        <td><div class="skeleton" style="width: 90%;"></div></td>
                    </tr>
                    <tr>
                        <td><div class="skeleton" style="width: 80%;"></div></td>
                        <td><div class="skeleton" style="width: 90%;"></div></td>
                        <td><div class="skeleton" style="width: 60%;"></div></td>
                        <td><div class="skeleton" style="width: 80%;"></div></td>
                        <td><div class="skeleton" style="width: 90%;"></div></td>
                        <td><div class="skeleton" style="width: 60%;"></div></td>
                        <td><div class="skeleton" style="width: 80%;"></div></td>
                        <td><div class="skeleton" style="width: 90%;"></div></td>
                    </tr>


                </tbody>
            </table>
        </div>
    </div>


    <div class="MasterlistWrap_footer">
        <div class="Mastercontainer wrapcontainer">
            <span>Showing  <span id="pagecountID">-</span> to <span id="totalpageID">-</span> of  <span id="DatalengthID">-</span> Entries</span>

            <div id="MastertableContainer" class="paginationPartlocal"></div>
        </div>
       
    </div>


</div>



<script src="~/Scripts/Utilities.js"></script>
<script src="~/Scripts/jquery-3.7.1.min.js"></script>
<script type="text/javascript">
    let masterlist = [];
    const editform = document.getElementById("EditMasterlist");

    const inputQuantity = document.getElementById("Quantity");
    const selectionChange = document.getElementById("selections");


    const addform = document.getElementById("addnewform");

    const GetMasterData = async () => {
        $('.Lackloading').show();
        $('.MainTable').hide();

        let res = await FetchAuthenticate('@Url.Action("GetPressMasterList", "PartsLocator")', {});

        if (res && res.Success) {
            masterlist = res.Data;
            MasterlistPagination(masterlist, 'MasterlistData', 'MastertableContainer', 100, 5);

            $('.Lackloading').hide();
            $('.MainTable').show();
        }
         
    }
    const PopulateSelection = async () => {
        let res = await FetchAuthenticate('@Url.Action("GetIDNoteColor", "PartsLocator")', {});
        let select = $("#selections");
       
        if (res && res.Success) {
            let arrayData = res.Data;
            $.each(arrayData, function (index, rowData) {
                select.append('<option value="' + rowData.Color + '">' + rowData.Color + '</option>');
            });
        }
    }    

    selectionChange.addEventListener('change', function (e) {
        e.preventDefault();
        const searchval = this.value.trim();
        let filterdata;

        if (this.selectedIndex > 0) {
            filterdata = masterlist.filter(prod => prod.Color === searchval);
        } else {
            filterdata = masterlist;
        }
        MasterlistPagination(filterdata, 'MasterlistData', 'MastertableContainer', 100, 5);
    });

    function MasterlistPagination(dataArray, tableBodyId, paginationId, recordsPerPage = 100, visibleButtons = 5) {
        let currentPage = 1;
        let filteredData = [...dataArray]; // Make a copy for filtering

        const updatePaginationInfo = () => {
            const totalRecords = filteredData.length;
            const totalPages = Math.ceil(totalRecords / recordsPerPage);

            $("#totalpageID").text(totalPages);
            $("#DatalengthID").text(totalRecords);

            return totalPages;
        };

        const renderTable = (page) => {
            const totalPages = updatePaginationInfo();
            const startIndex = (page - 1) * recordsPerPage;
            const endIndex = Math.min(startIndex + recordsPerPage, filteredData.length);
            const tableBody = document.getElementById(tableBodyId);
            tableBody.innerHTML = '';

            for (let i = startIndex; i < endIndex; i++) {
                const rowData = filteredData[i];


                const color = rowData.Color;

                const rowHtml = `
                <tr class='row_${i} rowClick' id='editButton_${rowData.Storage_ID}'>
                    <td style='font-weight: 600;' data-cell="Part number">${rowData.Partnum}</td>
                    <td data-cell="Model">${rowData.Model}</td>
                    <td data-cell="Racks">${rowData.Racksnum}</td>
                    <td data-cell="Level">${rowData.Levelnum}</td>
                    <td data-cell="Post">${rowData.Postnum}</td>
                    <td data-cell="Box number">${rowData.Boxnum}</td>
                    <td data-cell="Wins" style='display: flex; align-items: center; justify-content: center;'>
                        <div class="IdCard" style='background: ${color.toLowerCase()};'><span>${color}</span></div>
                    </td>
                    <td data-cell="Quantity">${rowData.Quantity}</td>
                    <td>asdsd</td>
                </tr>
            `;

                tableBody.innerHTML += rowHtml;
            }

            $("#pagecountID").text(currentPage);
        };

        const renderPagination = () => {
            const totalPages = updatePaginationInfo();
            const paginationContainer = document.getElementById(paginationId);
            paginationContainer.innerHTML = '';

            let startPage = Math.max(1, currentPage - Math.floor(visibleButtons / 2));
            let endPage = Math.min(totalPages, startPage + visibleButtons - 1);

            if (endPage > totalPages) {
                endPage = totalPages;
                startPage = Math.max(1, endPage - visibleButtons + 1);
            }

            if (totalPages <= visibleButtons) {
                startPage = 1;
                endPage = totalPages;
            }

            // Previous button
            paginationContainer.innerHTML += `<button ${currentPage === 1 ? 'disabled' : ''} onclick="changePage(${currentPage - 1})">
                                              <i class="fa-solid fa-backward"></i>
                                          </button>`;

            for (let i = startPage; i <= endPage; i++) {
                paginationContainer.innerHTML += `<button class="${i === currentPage ? 'active' : ''}" onclick="changePage(${i})">${i}</button>`;
            }

            // Next button
            paginationContainer.innerHTML += `<button ${currentPage === totalPages ? 'disabled' : ''} onclick="changePage(${currentPage + 1})">
                                             <i class="fa-solid fa-forward"></i>
                                          </button>`;
        };

        const changePage = (page) => {
            if (page >= 1 && page <= updatePaginationInfo()) {
                currentPage = page;
                renderTable(currentPage);
                renderPagination();
            }
        };

        // 🔍 Search functionality
        const searchTable = () => {
            const query = $('#searchbox').val().toLowerCase();

            filteredData = dataArray.filter(item =>
                item.Partnum.toLowerCase().includes(query) ||
                item.Model.toLowerCase().includes(query)
            );

            currentPage = 1;
            renderTable(currentPage);
            renderPagination();
        };

        // Add event listener for search input
        $('#searchbox').on('input', searchTable);

        // Handle click event for edit button
        $(document).on('click', '.editButton', function (e) {
            e.stopPropagation();
            const buttonId = $(this).attr('id');
            const rowIndex = buttonId.split('_')[1];

            const result = dataArray.find(p => p.Storage_ID == rowIndex);

            if (result) {
                document.getElementById("NoteSelected").value = result.Color;
                $("#Master_ID").val(result.Master_ID);
                $("#labelmodel").text(result.Model);
                $("#labelpart").text(result.Partnum);
                $("#StorageID").val(result.Storage_ID);
                $("#IDnote").val(result.Color);
                $("#Quantity").val(result.Quantity);
                $("#Postnum").val(result.Postnum);
                $("#Racks").val(result.Racksnum);
                $("#EditmodalMasterlist").modal("show");
            }
        });

        // Initialize table and pagination
        window.changePage = changePage;
        renderTable(currentPage);
        renderPagination();
    }

    function ColorIndex(colorname) {
        const colors = {
            "BLUE": 1,
            "WHITE": 2,
            "GREEN": 3,
            "PINK": 4,
            "YELLOW": 5
        };

        return colors[colorname] || 0; // Returns 0 if color is not found
    }


    GetMasterData();
    PopulateSelection();
</script>