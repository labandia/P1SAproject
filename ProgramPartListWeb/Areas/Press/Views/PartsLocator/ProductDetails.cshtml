
@{
    ViewBag.Title = "ProductDetails";
    Layout = "~/Areas/Press/Views/Shared/_PartsLocator.cshtml";
}


<section>
    <div class="MainDetails">
        <div class="ProductDetails">
            <div class="ProductDetails__content">
                <div class="ProductDetails__Text">
                    <span>Part number :</span>
                    <p id="partText">--NA--</p>
                </div>
                @*<i class='bx bx-arrow-back'></i>*@
                <img draggable="false" style="transform: scale(0.8)" src="~/Content/Images/hashtag (1).png" />
            </div>

            <div class="ProductDetails__content">
                <div class="ProductDetails__Text">
                    <span>Model name :</span>
                    <p id="Model">--NA--</p>
                </div>
                @*<i class='bx bx-arrow-back'></i>*@
                <img draggable="false" style="transform: scale(0.8)" src="~/Content/Images/hashtag (1).png" />
            </div>

            <div class="ProductDetails__content">
                <div class="ProductDetails__Text">
                    <span>Racks number :</span>
                    <p class="Racknum">--NA--</p>
                </div>
                @*<i class='bx bx-arrow-back'></i>*@
                <img draggable="false" style="transform: scale(1.1)" src="~/Content/Images/rack.png" />
            </div>

            <div class="ProductDetails__content">
                <div class="ProductDetails__Text">
                    <span>Box number:</span>
                    <p class="Boxnum">--NA--</p>
                </div>
                @*<i class='bx bx-arrow-back'></i>*@
                <img draggable="false" src="~/Content/Images/box.png" />
            </div>

            <div class="ProductDetails__content">
                <div class="ProductDetails__Text">
                    <span>Racks Level:</span>
                    <p class="Levelnum">--NA--</p>
                </div>
                @*<i class='bx bx-arrow-back'></i>*@
                <img draggable="false" src="~/Content/Images/box.png" />
            </div>


            <div class="ProductDetails__content">
                <div class="ProductDetails__Text">
                    <span>ID note :</span>
                    <p class="IDnote">--NA--</p>
                </div>
                @*<i class='bx bx-arrow-back'></i>*@
                <img draggable="false" src="~/Content/Images/box.png" />
            </div>

            <div class="ProductDetails__content">
                <div class="ProductDetails__Text">
                    <span>Quantity :</span>
                    <p class="Quantity">--NA--</p>
                </div>
                @*<i class='bx bx-arrow-back'></i>*@
                <img draggable="false" g src="~/Content/Images/boxes.png" />

            </div>
        </div>
    </div>

    <div class="ProductsActions">
        <div class="ProductionsForms">
            <label>Required Part number :</label>
            <input type="text" name="checkdetails" id="checkdetails" placeholder="Verified the Partnumber" />

            <label>Verify Status :</label>
            <div class="ProductionsForms__status">
                <i id="statsicon" class='bx bx-minus-circle'></i>

                <h2 id="statscolor">Verify Status ...</h2>
            </div>

            <label style="margin-top: 1em;">Select Transactions</label>

            <hr style="margin: 0;" />

            <div class="ProductionsForms__footer">
                <button id="StockIn" type="button" disabled>
                    <img src="~/Content/Images/back-in-store.png" />
                    Stock in
                </button>

                <button id="StockOut" type="button" disabled>
                    <img src="~/Content/Images/out-of-stock.png" />
                    Stock Out
                </button>
            </div>
        </div>
      

        <div class="ProductionsImage">
            <label>Actual Photo of the Product : <span id="mode"></span> </label>
            <br />
            @*<img src="~/Content/Images/No_Data.png" />*@
            <img src="~/Content/Images/RA92-25-2.jpg" />
        </div>
    </div>


    

  

 
</section>



<div class="modal fade modal-m" id="opentransactionModel" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">

            <div class="modal-body">
                <form method="post" class="mt-4" id="requestforms" autocomplete="off">
                    <div class="d-flex justify-content-between">
                        <label>Input Quantity: </label>
                        <span id="Enough" style="color: #D32F2F; font-size: .8rem; font-weight: 600;">Insufficient quantity</span>
                    </div>
                    <input type="text" name="QuanText" id="QuanText" />

                    <div class="d-flex align-items-center justify-content-between">
                        <span id="transacID">Stock IN</span>

                        <div class="d-flex align-items-center gap-2 ">
                            <button type="button" class="btncancel" data-bs-dismiss="modal"><i class="fa-solid fa-xmark"></i> Cancel</button>
                            <button type="submit" class="btnTransac" id="Quanbtn"> Continue <i class="fa-solid fa-arrow-right"></i></button>
                        </div>
                    </div>

                    
                </form>
            </div>

        </div>
    </div>
</div>

@*################ TRANSACTION  OUT PROCESS ############################### *@
<div class="modal fade modal-m" id="Shopordermodal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">

            <div class="modal-body">
                <form method="post" class="mt-4" id="summaryforms" autocomplete="off">

                    <label>FA Shop Order: </label>
                    <input type="text" name="FA_Shoporder" id="FA_Shoporder" />
                    <label>FA Plan Quantity: </label>
                    <input type="text" name="FA_Plan" id="FA_Plan" />
                    <label>Received By : </label>
                    <input type="text" name="Received" id="Received" />

                    <div class="d-flex align-items-center gap-2 justify-content-end">
                        <button type="button" class="btncancel" data-bs-dismiss="modal"><i class='bx bx-x'></i> Cancel</button>
                        <button type="submit" class="btnTransac"> Save <i class='bx bx-save'></i></button>
                    </div>
                </form>
            </div>

        </div>
    </div>
</div>



<script src="~/Scripts/Utilities.js"></script>
<script src="~/Scripts/sweetalert2.min.js"></script>
<script src="~/Scripts/jquery-3.7.1.min.js"></script>
<script type="text/javascript">
    let masterlist = [];
    let gtotal;
    let intquan = 0;
    let Action = 0;
    let quantityText;

    const sumforms = document.getElementById("summaryforms");
    const verifycheck = document.getElementById("checkdetails");
    const ActionButton = document.querySelectorAll(".Action_container button");
    const Stocks = document.getElementById("StockIn");
    const Stockout = document.getElementById("StockOut");

    const quanbutton = document.getElementById("Quanbtn");

    const inputQuantity = document.getElementById("QuanText");




  // Pull the masterlist Data
    const GetMasterData  = async () => {
        $("#Enough").hide();
        let res = await FetchAuthenticate('@Url.Action("GetMasterlistInfo", "PartsLocator")', { ID : @ViewBag.Storage_ID });

        if (rres && res.Success) {
            let data = res.Data;
            masterlist = data;

            $("#partText").text(data.Partnum);
            $("#Model").text(data.Model);
            $(".Postnum").text(data.Postnum);
            $(".Boxnum").text(data.Boxnum);
            $(".Levelnum").text(data.Levelnum);
            $(".Racknum").text(data.Racksnum);
            $(".Quantity").text(data.Quantity);
            $(".IDnote").text(data.Color);
            quantityText = data.Quantity;
            verifycheck.focus();
        }
  }

    verifycheck.addEventListener('keypress', function (e) {
        if (e.key === 'Enter') {
            e.preventDefault();
            let partnum = this.value;


            if (masterlist.Partnum === partnum) {
                if ($("#statsicon").hasClass("bx-minus-circle") || $("#statsicon").hasClass("bx-x-circle")) {
                        $("#statsicon").attr("class", "");
                }

                $("#statsicon").addClass("bx bxs-check-circle");
                $(".ProductionsForms__status").css("background-color", "rgb(203, 253, 216)");
                $(".ProductionsForms__status").css("border", "2px solid rgb(15, 160, 15)");
                $("#statscolor").text("GOOD");
                // Remove the 'disabled' attribute
                StockIn.removeAttribute("disabled");
                StockOut.removeAttribute("disabled");

            } else {
                if ($("#statsicon").hasClass("bx-minus-circle") || $("#statsicon").hasClass("bxs-check-circle")) {
                    $("#statsicon").attr("class", "");
                }


                $("#statsicon").addClass("bx bx-x-circle");
                $("#checkdetails").val("");
                $(".ProductionsForms__status").css("background-color", "rgb(254, 222, 222)");
                $(".ProductionsForms__status").css("background-color", "rgb(254, 222, 222)");
                $(".ProductionsForms__status").css("border", "2px solid red");
                $("#statscolor").text("NOT GOOD");
                //$(".ProductionsForms__status")
                // Add the 'disabled' attribute back
                StockIn.setAttribute("disabled", "true");
                StockOut.setAttribute("disabled", "true");
            }


        }


    });

    Stockout.addEventListener('click', function (e) {
        e.preventDefault();
        $("#Enough").hide();
        $("#QuanText").val("");
        Action = 1;
        $("#transacID").text("Stock Out");
        $("#opentransactionModel").modal("show");
    });

    Stocks.addEventListener('click', function (e) {
        e.preventDefault();

        $("#QuanText").val("");
        $("#Enough").hide();
        $("#transacID").text("Stock In");
        Action = 0;
        $("#opentransactionModel").modal("show");
    });

    quanbutton.addEventListener('click', function (e) {
        e.preventDefault();

        if ($("#QuanText").val().trim() === "") {
            $("#Enough").show();
            $("#Enough").text("No quantity entered");

            return false;
        }

        intquan = Number($("#QuanText").val());
        if (intquan === 0) {
            return;
        }

        if (Action == 0) {
            gtotal = intquan + quantityText;
            $("#Enough").hide();

            TransactionStockIn(gtotal);
        } else {
            gtotal = quantityText - intquan;

            if (gtotal < 0) {
                $("#Enough").text("Insufficient quantity");
                $("#Enough").show();
                return;

            }

            $("#opentransactionModel").modal("hide");
            $("#Shopordermodal").modal("show");
        }


    });

    sumforms.addEventListener('submit', async function (e) {
        e.preventDefault();

        let formData = new FormData(sumforms);
        formData.append("Storage_ID", parseInt(masterlist.Storage_ID));
        formData.append("NewQuan", gtotal);
        const data = Object.fromEntries(formData);

        let res = await postData('@Url.Action("IssuanceHistorySummary", "PartsLocator")', formData);
       
        $(".Quantity").text(gtotal);
        $("#Shopordermodal").modal("hide");
        $(".QuanText").val("");
        $(".InputBy").val("");
        $(".ShopOrder").val("");
   
    });
    inputQuantity.addEventListener('input', function () {
        const inputvalue = $(this).val(); // Get current input value
        const $errorLabel = $('.invalid-line'); // Target error label
        // Check if the input contains non-numeric characters
        if (/[^0-9.]/.test(inputvalue) || (inputvalue.match(/\./g) || []).length > 1) {
            $(this).val(inputvalue.replace(/\D/g, '')); // Remove non-numeric characters
        } else {
            return;
        }
    });


    function TransactionStockIn(quan) {
        let formData = new FormData();
        formData.append("Storage_ID", parseInt(masterlist.Storage_ID));
        formData.append("AddQuan", quan);

        //const data = Object.fromEntries(formData);
        //console.log(data);

        $.ajax({
             url: '@Url.Action("AddNewStocksIn", "PartsLocator")',
             type: 'POST',
             dataType: 'json',
             data: formData,
             processData: false, // Prevents jQuery from converting the FormData object into a query string
             contentType: false, // Ensures that the Content-Type header is set correctly for FormData
            success: function (res) {

                 $(".Quantity").text(gtotal);
                 $("#opentransactionModel").modal("hide");
                 //$(".QuanText").val("");
                 //$(".InputBy").val("");
                 //$(".ShopOrder").val("");
             },
             error: function (jqXHR, textStatus, errorThrown) {
                 alert('An error occurred while processing the request.');
                 console.error(textStatus, errorThrown);
             }
         });
    }


    GetMasterData();
</script>