
@{
    Layout = "~/Areas/Press/Views/Shared/_PartsLocator.cshtml";
}

<content class="location">
    <div class="location_storage">
        <div class="wrapcontainer">
            <div class="location_header">
                <h4>Aluminum Frame Product Storage</h4>

                <form method="post" id="searchidform">

                    <div class="masterlistInput">
                        <input type="text" placeholder="Search by Part number ... " id="searchpartnum" />
                        <div class="line"></div>
                        <i class="fa-solid fa-magnifying-glass"></i>
                    </div>

                    <button style="display: none;" onclick="toggleSidebar()" id="locationbtn"><i class='bx bx-scan'></i>  Scan/Search</button>
                </form>
            </div>


            <div class="location_racks">

                <div class="location_racks_wrap">
                    <div id="Rackscontainer">

                    </div>

                </div>
            </div>


        </div>
    </div>
    <div id="overlay" class="overlay" onclick="toggleSidebar()"></div>
    <div class="Product" id="Product">
        <div class="Product__header">
            <label style="font-weight: 600;">Part number : <span id="partnumlabel" style="font-weight: 400;">--NA--</span> </label>
            <br />
            <label style="font-weight: 600; margin-bottom: 1em;">Model : <span class="Model" style="font-weight: 400;">--NA--</span></label>

            <br />
            <small style="font-weight: 400;">Racks details :</small>

            <button type="button" id="custombtnmodal" class="btn btn-secondary">&times;</button>
        </div>

        <div class="Product__Allheader">
            <h3 id="racksname">Racks 3</h3>
            <button id="OpenAddform">Add Products</button>
        </div>


        <div class="Tablewrapper">
            <table class="ProductList">
                <thead>
                    <tr>
                        <th>Part number </th>
                        <th>Model </th>
                        <th>Racks </th>
                        <th>Level </th>
                        <th>Post </th>
                        <th>Box number</th>
                        <th>ID note Color</th>
                        <th>Quantity</th>
                        <th>Edit</th>
                    </tr>
                </thead>
                <tbody id="ProductRows">
                </tbody>

            </table>
        </div>


    </div>
</content>




<div class="modal fade modal-lg" id="AddProductModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">

            <div class="modal-body">
                <div class="custom_modal_header">
                    <div class="custom_modal__icon">
                        <div class="custom_icon_container">
                            <i class="fa-solid fa-plus-minus"></i>
                        </div>
                        <div class="custom_modal_title">
                            <span id="labelmodel" class="labelsize">Add Data</span>
                            <p id="labelpart">Fill up all input fields</p>
                        </div>
                    </div>

                    <button type="button" class="btn btn-light  close" data-bs-dismiss="modal">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>


                <form method="post" enctype="multipart/form-data" class="formcontainer" id="addnewform" autocomplete="off">
                    <div class="row">
                        <div class="form_group col-12 col-sm-12 col-lg-6 mb-2">
                            <label>Part number : </label> <br />
                            <input type="text" placeholder="Enter part number" name="Partnum" id="Partnum" />
                            <small>Press enter to check if partnumber exist</small>
                        </div>
                        <div class="form_group col-12 col-sm-12 col-lg-6 mb-2">
                            <label>Model : </label>
                            <input placeholder="Enter model" name="Model" id="Model" />
                        </div>
                    </div>

                    <div class="row">
                        <div class="form_group col-12 col-sm-12 col-lg-6 mb-2">
                            <label>Level : </label> <br />
                            <input type="text" placeholder="Enter racks level" name="Levelnum" id="Levelnum" onkeypress="return restrictChars(event)" />
                        </div>
                        <div class="form_group col-12 col-sm-12 col-lg-6 mb-2">
                            <label>Box number : </label> <br />
                            <input type="text" placeholder="Enter box number" name="Boxnum" id="Boxnum" onkeypress="return restrictChars(event)" />
                        </div>
                    </div>

                    <div class="row">
                        <div class="form_group col-12 col-sm-12 col-lg-6 mb-2">
                            <label>Post Number : </label>
                            <input placeholder="Enter post number" name="Postnum" id="Postnum" onkeypress="return restrictChars(event)" />
                        </div>
                        <div class="form_group col-12 col-sm-12 col-lg-6 mb-2">
                            <label>Racks : </label>
                            <input type="text" placeholder="Enter racks" name="Racksnum" id="Racksnum" onkeypress="return restrictChars(event)" />
                        </div>
                    </div>

                    <div class="row">
                        <div class="form_group col-12 col-sm-12 col-lg-6 mb-2">
                            <label>ID note : </label><br />
                            <div class="select-container" style="width: 100%; margin-bottom: 1em;">
                                <select id="NoteID" name="NoteID">
                                    <option value="1">Blue</option>
                                    <option value="2">White</option>
                                    <option value="3">Green</option>
                                    <option value="4">Pink</option>
                                    <option value="5">Yellow</option>
                                </select>
                            </div>
                        </div>
                        <div class="form_group col-12 col-sm-12 col-lg-6 mb-2">
                            <label>Quantity : </label> <br />
                            <input type="text" placeholder="Enter Quantity" name="Quantity" id="Quantity" onkeypress="return restrictChars(event)" />
                        </div>
                    </div>



                    <div class="d-flex justify-content-end mt-4">
                        <button id="btnSave"><i class="fa-regular fa-floppy-disk"></i> Save</button>
                    </div>
                </form>
            </div>

        </div>
    </div>
</div>

<div class="modal fade modal-m" id="EditmodalMasterlist" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">

            <div class="modal-body">
                <div class="custom_modal_header">
                    <div class="custom_modal__icon">
                        <div class="custom_icon_container">
                            <i class="fa-solid fa-pen-to-square"></i>
                        </div>
                        <div class="custom_modal_title">
                            <span id="labelmodel" class="labelsize">Edit Data</span>
                            <p id="labelpart">adsd</p>
                        </div>
                    </div>

                    <button type="button" class="btn btn-light  close" data-bs-dismiss="modal">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>


                <form method="post" enctype="multipart/form-data" class="formcontainer" id="EditMasterlist" autocomplete="off">
                    <input type="hidden" name="StorageID" id="StorageID" />
                    <label>ID note : </label><br />
                    <div class="select-container" style="width: 100%; margin-bottom: 1em;">
                        <select id="NoteSelected">
                            <option value="BLUE">Blue</option>
                            <option value="WHITE">White</option>
                            <option value="GREEN">Green</option>
                            <option value="PINK">Pink</option>
                            <option value="YELLOW">Yellow</option>
                        </select>
                    </div>


                    <input type="hidden" name="Master_ID" id="Master_ID" />
                    @*<input placeholder="Enter ID note" name="IDnote" id="IDnote" />*@

                    <label>Quantity : </label> <br />
                    <input type="text" placeholder="Enter Quantity" name="Quantity" id="EditQuantity" />

                    <label>Post Number : </label>
                    <input placeholder="Enter Post number" name="Postnum" id="EditPostnum" />

                    <label>Racks : </label>
                    <input type="text" placeholder="Enter Racks" name="Racks" id="Racks" />




                    <div class="d-flex justify-content-end mt-4">
                        <button id="btnSave"><i class="fa-regular fa-floppy-disk"></i> Save</button>
                    </div>
                </form>
            </div>

        </div>
    </div>
</div>



<script src="~/Scripts/Utilities.js"></script>
<script src="~/Scripts/jquery-3.7.1.min.js"></script>
<script type="text/javascript">
    let masterlist = [];
    let rackslist = [];
    var Racknumber;
    var tempartnum;

    // ADDING NEW PRODUCT TO THE SPECIFY RACKS NUMBER
    const addbtn = document.getElementById('OpenAddform');
    const addform = document.getElementById('addnewform');

    // EDITS THE PRODUCTS INFOS AND LOCATIONS RACKS
    const editform = document.getElementById("EditMasterlist");

    const localform = document.getElementById('searchidform');
    const localsearch = document.getElementById('locationbtn');

    const close = document.getElementById('custombtnmodal');

    // DISPLAY THE RACKS AND ITS PRODUCTS
    const GetStorageRacks = async (racks, partnum, toggle) => {
        let res = await FetchAuthenticate('@Url.Action("GetStorageRacks", "PartsLocator")', { rackID: racks, parts: partnum });

        var SetData = $("#ProductRows");
        SetData.empty();

        $("#racksname").text("Racks " + racks);

        if (res && res.Success) {
            $.each(res.Data, function (index, res) {
                const color = res.Color;

                var getdata = `
                   <tr class='row_${index} rowClick' id='editButton_${res.Storage_ID}'>
                       <td style='font-weight: 600;' data-cell="Part number">${res.Partnum}</td>
                          <td data-cell="Model">${res.Model}</td>
                          <td data-cell="Racks">${res.Racksnum}</td>
                          <td data-cell="Level">${res.Levelnum}</td>
                          <td data-cell="Post">${res.Postnum}</td>
                          <td data-cell="Box number">${res.Boxnum}</td>
                          <td data-cell="Wins" style='display: flex; align-items: center; justify-content: center;'>
                              <div class="IdCard" style='background: ${color.toLowerCase()};'><span>${color}</span></div>
                          </td>
                          <td data-cell="Quantity">${res.Quantity}</td>
                        <td data-cell="Action">
                         <button style='padding: .5em 1.3em;' type='button' class='showedit text-primary bg-white' id='showedit_${res.Storage_ID}' >
                                 <i class="fa-solid fa-pen-to-square"></i>
                         </button>
                       </td>
                   </tr>`;
                SetData.append(getdata);
            });

            if (toggle === 0) {
                toggleSidebar();
            }



            $(document).off('click', '.rowClick').on('click', '.rowClick', function (e) {
                e.stopPropagation(); // Prevent triggering other click events
                var storageID = $(this).attr('id');
                var ID = storageID.split('_')[1];
                window.location.href = "/Press/PartsLocator/ProductDetails?StorageID=" + ID;
            });

            $(document).on('click', '.showedit', function (e) {
                e.stopPropagation();
                var buttonId = $(this).attr('id');
                var rowIndex = buttonId.split('_')[1];

                const prod = masterlist.find(res => res.Storage_ID === parseInt(rowIndex));

                $("#Master_ID").val(prod.Master_ID);
                $("#StorageID").val(prod.Storage_ID);
                $("#NoteSelected").val(prod.Color);
                $("#EditQuantity").val(prod.Quantity);
                $("#EditPostnum").val(prod.Postnum);
                $("#Racks").val(prod.Racksnum);
                $("#EditmodalMasterlist").modal("show");
                //alert("edit trigger");

            });
        }

    }
    // Pull the masterlist Data
    const GetMasterData = async () => {
        let res = await FetchAuthenticate('@Url.Action("GetPressMasterList", "PartsLocator")', {});

        if (res && res.Success) {
            masterlist = res.Data;

            const result = [...new Set(masterlist.map(obj => obj.Racksnum))]
                .sort((a, b) => a - b) // Sort as numbers
                .map(racksum => ({
                    Racksnum: racksum,
                    Isactive: 0
                }));

            rackslist = result;
            displayRacks(result);
        }  
    }




    addbtn.addEventListener('click', function (e) {
        e.preventDefault();
        $("#AddProductModal").modal('show');
    });

    addform.addEventListener('submit', function (e) {
        e.preventDefault();

        const checkpart = masterlist.filter(m => String(m.Partnum).trim() === $("#Partnum").val() && m.Racksnum === parseInt(Racknumber));

        // Checks the partnumber if exist
        if (checkpart.length > 0) {
            //console.log("No partnumber " + $("#Partnum").val() + " exists in the database");
            $("#Partnum").css("outline", "2px solid red");
            return;
        }

        $("#Partnum").css("outline", "");

        let formdata = new FormData(addform);
        let data = Object.fromEntries(formdata);


        $.ajax({
               url: '@Url.Action("AddMasterlistData", "PartsLocator")',
               type: 'POST',
               dataType: 'json',
               data: formdata,
               processData: false,
               contentType: false,
               success: function (res) {
                   addform.reset();
                   GetStorageRacks(data.Racks, 1, 1);
                   $("#AddProductModal").modal("hide");
               },
               error: function (jqXHR, textStatus, errorThrown) {
                   alert('An error occurred while processing the request.');
                   console.error(textStatus, errorThrown);
               }
        });

    });

    editform.addEventListener('submit', async function (e) {
        e.preventDefault();
        let formdata = new FormData(editform);
        formdata.append('NoteID', ColorIndex($("#NoteSelected").val()));
        const data = Object.fromEntries(formdata);
    
        let res = await postData('@Url.Action("EditpressMasterlist", "PartsLocator")', formdata);

        if (res.StatusCode === 200) {
            editform.reset();
            GetStorageRacks(data.Racks, '', 1);
            $("#EditmodalMasterlist").modal("hide");
        }
    });



    // Search partnumber details
    localsearch.addEventListener('click', function (e) {
        e.preventDefault();
        var partnum = $("#searchpartnum").val();
        if (partnum !== "") {
            tempartnum = partnum;
            searchpartnum(partnum);
        }
    });
    localform.addEventListener('keypress', function (e) {
        if (e.key === 'Enter') {
            e.preventDefault();
            var partnum = $("#searchpartnum").val();
            if (partnum !== "") {
                tempartnum = partnum;
                searchpartnum(partnum);
            }
        }
    });



    close.addEventListener('click', function (e) {
        e.preventDefault();
        toggleSidebar();
    });


    function displayRacks(array) {
        var SetData = $("#Rackscontainer");
        SetData.empty(); // Ensure we clear previous elements before appending new ones

        $.each(array, function (index, res) {
            let setHighligted = res.Isactive == 1 ? "IsActive" : "";
            var getdata = `<div class="Rackscard ${setHighligted}" id='Rackscard_${res.Racksnum} '>
                                <h1>${res.Racksnum}</h1>
                          </div>`;
            SetData.append(getdata);
        });

        // Remove previous event handlers before re-binding to avoid duplicate triggers
        $(document).off('click', '.Rackscard').on('click', '.Rackscard', function (e) {
            e.stopPropagation(); // Prevent triggering other click events
            var SetData = $("#ProductRows");
            SetData.empty();

            var sidebar = document.getElementById("Product");
            var overlay = document.getElementById("overlay");
            var buttonId = $(this).attr('id');
            var racksnum = buttonId.split('_')[1];

            Racknumber = racksnum;

            var partnum = $("#searchpartnum").val();

            if ($(this).hasClass('IsActive')) {

                $(".Product__header").show();
                $(".Product__Allheader").hide();
                $("#partnumlabel").text(tempartnum);
                GetStorageRacks(racksnum, tempartnum, 0);


            } else {
                $(".Product__header").hide();
                $(".Product__Allheader").show();
                GetStorageRacks(racksnum, "", 0);
                console.log('This rack is not active.');
            }

        });



        $("#Rackscontainer").focus();
    }







    function RackStoragelist(racksnum, toggleID) {
        var SetData = $("#ProductRows");
        SetData.empty();

        const reloop = masterlist.filter(m => m.Racksnum === parseInt(racksnum));



        if (reloop.length > 0) {
            $.each(reloop, function (index, res) {
                const color = res.Color;

                var getdata = `
              <tr class='row_${index} rowClick' id='editButton_${res.Storage_ID}'>
                   <td style='font-weight: 600;' data-cell="Part number">${rowData.Partnum}</td>
                   <td data-cell="Model">${res.Model}</td>
                   <td data-cell="Racks">${res.Racksnum}</td>
                   <td data-cell="Level">${res.Levelnum}</td>
                   <td data-cell="Post">${res.Postnum}</td>
                   <td data-cell="Box number">${res.Boxnum}</td>
                   <td data-cell="Wins" style='display: flex; align-items: center; justify-content: center;'>
                     <div class="IdCard" style='background: ${color.toLowerCase()};'><span>${color}</span></div>
                   </td>
                   <td data-cell="Quantity">${res.Quantity}</td>
                   <td data-cell="Action">
                     <button style='padding: .5em 1.3em;' type='button' class='showedit text-primary bg-white' id='showedit_${res.Storage_ID}' >
                            <i class="fa-solid fa-pen-to-square"></i>
                     </button>
                   </td>
              </tr>`;
                SetData.append(getdata);
            });

            if (toggleID == 0) {
                toggleSidebar();
            }


            $(document).off('click', '.rowClick').on('click', '.rowClick', function (e) {
                e.stopPropagation(); // Prevent triggering other click events
                var storageID = $(this).attr('id');
                var ID = storageID.split('_')[1];
                window.location.href = "/Press/PartsLocator/ProductDetails?StorageID=" + ID;
            });

            $(document).on('click', '.showedit', function (e) {
                e.stopPropagation();
                var buttonId = $(this).attr('id');
                var rowIndex = buttonId.split('_')[1];

                const prod = masterlist.find(res => res.Storage_ID === parseInt(rowIndex));

                $("#Master_ID").val(prod.Master_ID);
                $("#StorageID").val(prod.Storage_ID);
                $("#NoteSelected").val(prod.Color);
                $("#EditQuantity").val(prod.Quantity);
                $("#EditPostnum").val(prod.Postnum);
                $("#Racks").val(prod.Racksnum);
                $("#EditmodalMasterlist").modal("show");

            });
        }
    }



    function searchpartnum(strpartnum) {
        // Search partnum process
        const mlist = masterlist.filter(m => m.Partnum === strpartnum);

        // Reset Isactive for all racks to 0 first
        rackslist.forEach(rack => rack.Isactive = 0);

        mlist.forEach(prod => {
            let index = rackslist.findIndex(obj => obj.Racksnum === prod.Racksnum);
            if (index !== -1) {
                rackslist[index].Isactive = 1;
            }
        });


        // Update UI

        $("#Rackscontainer").empty();
        displayRacks(rackslist);

        if (mlist.length > 0) {
            $(".Model").text(mlist[0].Model);
        } else {
            Swal.fire({
                icon: "error",
                text: `Partnumber ${strpartnum} is not found.`,
                timer: 1500,
                showConfirmButton: false
            });

        }
    }


    // Toggle the modal sidebar
    function toggleSidebar() {
        var sidebar = document.getElementById("Product");
        var overlay = document.getElementById("overlay");
        if (sidebar.style.right === "0px") {
            sidebar.style.right = "-1200px";
            overlay.classList.remove("active");
            $("#searchpartnum").val("");
            GetMasterData();
        } else {
            sidebar.style.right = "0px";
            overlay.classList.add("active");
        }
    }




    // For ID Note
    function ColorIndex(colorname) {
        const colors = {
            "BLUE": 1,
            "WHITE": 2,
            "GREEN": 3,
            "PINK": 4,
            "YELLOW": 5
        };

        return colors[colorname] || 0; // Returns 0 if color is not found
    }


    GetMasterData();
</script>


























